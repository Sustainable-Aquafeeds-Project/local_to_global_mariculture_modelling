---
title: "05_visualisation"
format: html
editor: source

execute:
  eval: false
  echo: false
  warning: false
  message: false
  cache: true
---

```{r setup, eval=T, cache=T}
# library(tidyverse)
library(magrittr)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(here)
library(ggpubr)
library(patchwork)
library(qs)
library(arrow)
library(targets)
library(sf)
library(terra)
library(rnaturalearth)
library(rnaturalearthdata)
library(dtplyr)
library(furrr)
library(RColorBrewer)

source(here("src/spatial_templates.R"))
source(here("src/model_functions.R"))
Sys.setenv(TAR_PROJECT = "project_main")
```

# Water temp

# General fish functions

```{r function response to temperature}
df <- data.frame(water_temp = seq(-5, 30, 0.25))
df$resp <- exp(species_params['pk']*df$water_temp)

df %>% 
  ggplot(aes(x = water_temp, y = resp)) +
  geom_line(linewidth = 0.75) +
  scale_y_continuous(breaks = seq(0,5,0.5)) +
  labs(x = "Water temperature", y = "Temperature response") +
  theme_classic() +
  theme(text = element_text(colour = "black", family = "serif", size = 12))
```

```{r feeding rate}
df <- data.frame(water_temp = seq(-5, 30, 0.25))
df$feeding <- sapply(FUN = feeding_rate, X = df$water_temp, species_params = species_params)

df %>% 
  ggplot(aes(x = water_temp, y = feeding)) +
  geom_line(linewidth = 0.75) +
  geom_vline(aes(xintercept = species_params["Toa"]), linetype = "dashed") +
  geom_vline(aes(xintercept = species_params["Taa"]), linetype = "dotted") +
  geom_vline(aes(xintercept = species_params["Tma"]), linetype = "dotted") +
  scale_y_continuous(breaks = seq(0,1,0.1)) +
  labs(x = "Water temperature", y = "Relative feeding rate") +
  theme_classic() +
  theme(text = element_text(colour = "black", family = "serif", size = 12))
```

# Feed data

```{r targets-data}
species_params <- tar_read(species_params)

ref_feed <- list(
    feed_params_protein <- tar_read(feed_params_protein, branches = 1) %>% 
      mutate(feed = "reference") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_protein = sum(feed_protein),
              feed_protein_digestibility = sum(feed_protein_digestibility))
  feed_params_carbs <- tar_read(feed_params_carbs, branches = 1) %>% 
      mutate(feed = "reference") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_carb = sum(feed_carb),
              feed_carb_digestibility = sum(feed_carb_digestibility))
  feed_params_lipids <- tar_read(feed_params_lipids, branches = 1) %>% 
      mutate(feed = "reference") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_lipid = sum(feed_lipid),
              feed_lipid_digestibility = sum(feed_lipid_digestibility))
)
past_feed <- list(
    feed_params_protein <- tar_read(feed_params_protein, branches = 1) %>% 
      mutate(feed = "past") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_protein = sum(feed_protein),
              feed_protein_digestibility = sum(feed_protein_digestibility))
  feed_params_carbs <- tar_read(feed_params_carbs, branches = 1) %>% 
      mutate(feed = "past") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_carb = sum(feed_carb),
              feed_carb_digestibility = sum(feed_carb_digestibility))
  feed_params_lipids <- tar_read(feed_params_lipids, branches = 1) %>% 
      mutate(feed = "past") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_lipid = sum(feed_lipid),
              feed_lipid_digestibility = sum(feed_lipid_digestibility))
)
fut_feed <- list(
    feed_params_protein <- tar_read(feed_params_protein, branches = 1) %>% 
      mutate(feed = "future") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_protein = sum(feed_protein),
              feed_protein_digestibility = sum(feed_protein_digestibility))
  feed_params_carbs <- tar_read(feed_params_carbs, branches = 1) %>% 
      mutate(feed = "future") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_carb = sum(feed_carb),
              feed_carb_digestibility = sum(feed_carb_digestibility))
  feed_params_lipids <- tar_read(feed_params_lipids, branches = 1) %>% 
      mutate(feed = "future") %>% 
      group_by(feed) %>% 
      reframe(proportion = sum(proportion),
              feed_lipid = sum(feed_lipid),
              feed_lipid_digestibility = sum(feed_lipid_digestibility))
)
```

```{r comparing-feeds}


```

# Finish off farm data

```{r straight from targets}

```

