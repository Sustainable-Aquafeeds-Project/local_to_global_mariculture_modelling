---
title: "Atlantic salmon model"
format: html
editor: visual
---

Setup

```{r}
library(tidyverse)
library(here)


#functions
source(here("src/model_functions.R"))

#species paths
this_species <- "atlantic_salmon"
this_path <- sprintf(here("data/%s"), this_species)

```

```{r}

farms <-  qread("data/_general_data/farm_locations/locations_w_species_fao_area.qs") |> 
  filter(model_name == this_species) |> 
  select(-row_num) |> 
  mutate(farm_id = row_number())


days <- seq(1:365)


temp_data <- map_dfc(.x = days, .f = \(day_number){
  
  
  message("Getting temperature data for all sites - day ", day_number)
  
  sst_test <- rast(sprintf("data/_general_data/SST/SST_gf_rasters/sst_nasa_mur_L4_0.25_mean2010-2019_day_%s.tif", day_number))

  extract(sst_test, farms) |> 
    mutate(day = paste0("day_", day_number)) |> 
    pivot_wider(names_from = "day", values_from = "focal_mean") |> 
    select(-ID)
  
  
}) |> 
  mutate(farm_id = row_number())


farms |> 
  left_join(temp_data, by = c("farm_id" = "farm_ID")) |> 
  pivot_longer(names_to = "day", values_to = "temp_c", cols = starts_with("day_"))

names(temp_data)
```

Create and tidy inputs

```{r}

# pull in data for interpolation

forcings <- data_loader(this_path)


inputs <- preprocess(this_path = this_path, these_forcings = forcings)



```

### Population model

```{r}

model_output <- model(this_path = this_path, forcings = forcings, this_species = this_species)


```
