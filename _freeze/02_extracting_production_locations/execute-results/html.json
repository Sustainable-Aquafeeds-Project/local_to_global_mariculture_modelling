{
  "hash": "041358076c0feb09f24310dfe3971a65",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Extracting production locations for each species to obtain environmental forcings\"\nauthor: Richard Cottrell\ndate: today\neditor: source\n---\n\n\n\n## Set up\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(here)\nlibrary(janitor)\nlibrary(sf)\nlibrary(qs)\nlibrary(countrycode)\nlibrary(terra)\nlibrary(units)\nlibrary(readr)\nlibrary(ggplot2)\n\nsource(here(\"00_dirs.R\"))\n```\n:::\n\n\n\n# Get production data\n\nClean aquaculture production data from the FAO and isolate data for Atlantic salmon.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get aquaculture quantity in tonnes live weight\nquantity <- file.path(rawdata_path, \"Aquaculture_2025.1.0\", \"Aquaculture_Quantity.csv\") %>% \n  read.csv() %>% \n  clean_names() %>% \n  mutate(value = set_units(value, \"t\")) %>% \n  select(-measure)\n\n# Apply environment codes and filter by \"marine\"\nenvironment_codes <- file.path(rawdata_path, \"Aquaculture_2025.1.0\", \"CL_FI_PRODENVIRONMENT.csv\") %>% \n  read.csv() %>% \n  distinct(Code, Name_En)\n\nquantity <- quantity %>% \n  merge(environment_codes, by.x = \"environment_alpha_2_code\", by.y = \"Code\") %>%\n  rename(environment = Name_En) %>% \n  select(-environment_alpha_2_code)\n\n# Apply species codes\nspecies_codes <- file.path(rawdata_path, \"Aquaculture_2025.1.0\", \"CL_FI_SPECIES_GROUPS.csv\") %>% \n  read.csv() %>% \n  distinct(X3A_Code, Scientific_Name)\n\nquantity <- quantity %>% \n  merge(species_codes, by.x = \"species_alpha_3_code\", by.y = \"X3A_Code\") %>% \n  filter(!is.na(Scientific_Name)) %>% \n  select(-species_alpha_3_code)\n\n# Apply status codes\nstatus_codes <- file.path(rawdata_path, \"Aquaculture_2025.1.0\", \"CL_FI_SYMBOL_SDMX.csv\") %>% \n  read.csv() %>% \n  distinct(Symbol, Name_En, Description_En)\n\nquantity <- quantity %>% \n  merge(status_codes, by.x = \"status\", by.y = \"Symbol\") %>% \n  rename(status_nm = Name_En,\n         status_description = Description_En) %>% \n  select(-status)\n\n# Apply country and area codes\ncountry_codes <- file.path(rawdata_path, \"Aquaculture_2025.1.0\", \"CL_FI_COUNTRY_GROUPS.csv\") %>% \n  read.csv() %>% \n  select(UN_Code, Identifier, Name_En, ISO3_Code)\narea_codes <- file.path(rawdata_path, \"Aquaculture_2025.1.0\", \"CL_FI_WATERAREA_GROUPS.csv\") %>% \n  read.csv() %>% \n  select(Code, Name_En)\n\nquantity <- quantity %>% \n  merge(country_codes, by.x = \"country_un_code\", by.y = \"UN_Code\", all.x = T, all.y = F) %>% \n  merge(area_codes, by.x = \"area_code\", by.y = \"Code\", all.x = T, all.y = F) %>% \n  rename(\n    country = Name_En.x, \n    fao_fishing_area = Name_En.y,\n    country_id = Identifier\n    )\n\nquantity <- quantity %>% \n  mutate(\n    environment = as.factor(environment),\n    Scientific_Name = as.factor(Scientific_Name),\n    status_nm = as.factor(status_nm),\n    status_description = as.factor(status_description),\n    country = as.factor(country),\n    fao_fishing_area = as.factor(fao_fishing_area),\n    ISO3_Code = as.factor(ISO3_Code)\n  ) %>% \n  filter(\n    # Scientific_Name %in% c(\"Salmoniformes (=Salmonoidei)\", \"Salmo spp\", \"Salmo salar\", \"Salmonidae\") &\n    environment == \"Marine\" & \n    status_nm != \"Not significant (<0.5)\"\n    )\n\nqsave(quantity, file.path(species_path, \"production\", \"aquaculture_quantity.qs\"))\n```\n:::\n\n\n\nAverage production over years 2019:2023.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproduction <- quantity %>% \n  filter(between(period, 2017, 2023)) %>% \n  group_by(country, Scientific_Name, environment, ISO3_Code, fao_fishing_area, period) %>% \n  reframe(production = mean(value))\n\nqsave(prod, file.path(species_path, \"production\", \"aquaculture_production.qs\"))\n\nggplot(production, aes(x = country, y = production)) +\n  geom_point() +\n  coord_flip()\n```\n:::\n\n\n\n# Match farm locations to FAO regions\n\nPull in farm locations, add FAO Major fishing regions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms_sf <- qread(file = \"data/_general_data/farm_locations/locations.qs\") %>% \n  st_as_sf(coords = c(\"X\", \"Y\"), crs = \"EPSG:4326\") %>% \n  mutate(row_num = row_number()) %>% \n  group_by(row_num) %>% \n  group_split()\n\nFAO_shp <- read_sf(file.path(rdsi_dir, \"raw_data/fao/FAO_AREAS_CWP_NOCOASTLINE\")) %>% filter(F_LEVEL == \"MAJOR\") %>% select(F_CODE)\n\n#test function\n#this_farm <- farms_sf[[1]]\n\n# define cores for parallel process\n\ncores <- parallel::detectCores()-2\nfuture::plan(strategy = \"multisession\", workers = cores)\n\n# Intersect farm points with FAO fishing code polygons\nfarm_fao_intersect <- furrr::future_map(.x = farms_sf, .f = \\(this_farm){ # initiate parallel map function\n    this_farm_fao_code <- st_intersection(this_farm, FAO_shp)\n    return(this_farm_fao_code)\n}) %>% bind_rows() #combine to data frame\n\nqsave(x = farm_fao_intersect, file = here(\"data/_general_data/farm_locations/locations_w_fishing_areas.qs\"))\n```\n:::\n\n\n\nCheck that farm locations for each country sit in the correct FAO fishing area - flag those where there is a misalignment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmariculture_prod_all <- production %>% \n  group_by(ISO3_Code, country, period) %>% \n  nest() %>% \n  mutate(national_production = map(data, ~(sum(.$production)))) %>% \n  unnest(cols = c(data, national_production)) %>% \n  ungroup() %>% \n  filter(drop_units(production) > 0) %>% \n  mutate(\n    model_name = case_when(\n      grepl(\"Epinephelus|Mycteroperca|Serranidae\", Scientific_Name) ~ \"grouper\", \n      grepl(\"Oncorhynchus|Salmonidae\", Scientific_Name) ~ \"general_salmonid\", \n      grepl(\"Salmo salar\", Scientific_Name) ~ \"atlantic_salmon\", \n      grepl(\"Mytilus|Crassostrea|Ostreidae|Magallana\", Scientific_Name) ~ \"mussels_oysters\",\n      grepl(\"Sparus\", Scientific_Name) ~ \"bream\",       \n      grepl(\"Dicentrarchus\", Scientific_Name) ~ \"bass\",       \n      grepl(\"Ulva|Saccharina|Eucheuma\", Scientific_Name) ~ \"general_seaweed\",       \n      grepl(\"Acipenseridae\", Scientific_Name) ~ \"sturgeon\",\n      grepl(\"Ariidae|Bagridae\", Scientific_Name) ~ \"catfish\",\n      grepl(\"Astacidae|Cambaridae\", Scientific_Name) ~ \"crayfish\",\n      grepl(\"Atherinidae\", Scientific_Name) ~ \"silversides\",\n      grepl(\"Bothidae|Pleuronectidae\", Scientific_Name) ~ \"flounder\",\n      grepl(\"Carangidae\", Scientific_Name) ~ \"jacks\",\n      grepl(\"Cardiidae\", Scientific_Name) ~ \"cockles\",\n      grepl(\"Characidae\", Scientific_Name) ~ \"tetras\",\n      grepl(\"Cyprinidae\", Scientific_Name) ~ \"minnows\",\n      grepl(\"Eleotridae\", Scientific_Name) ~ \"sleepers\",\n      grepl(\"Ex Unionidae|Mytilidae\", Scientific_Name) ~ \"mussels\",\n      grepl(\"Gerreidae\", Scientific_Name) ~ \"mojarras\",\n      grepl(\"Gobiidae\", Scientific_Name) ~ \"gobies\",\n      grepl(\"Lutjanidae\", Scientific_Name) ~ \"snappers\",\n      grepl(\"Monacanthidae\", Scientific_Name) ~ \"filefish\",\n      grepl(\"Mugilidae\", Scientific_Name) ~ \"mullets\",\n      grepl(\"Octopodidae\", Scientific_Name) ~ \"octopus\",\n      grepl(\"Palaemonidae|Penaeus\", Scientific_Name) ~ \"shrimp\",\n      grepl(\"Palinuridae\", Scientific_Name) ~ \"lobsters\",\n      grepl(\"Pectinidae\", Scientific_Name) ~ \"scallops\",\n      grepl(\"Portunidae\", Scientific_Name) ~ \"crabs\",\n      grepl(\"Sciaenidae\", Scientific_Name) ~ \"drums\",\n      grepl(\"Scombridae\", Scientific_Name) ~ \"mackerels\",\n      grepl(\"Scorpaenidae\", Scientific_Name) ~ \"rockfish\",\n      grepl(\"Serranidae\", Scientific_Name) ~ \"groupers\",\n      grepl(\"Soleidae\", Scientific_Name) ~ \"soles\",\n      grepl(\"Sparidae\", Scientific_Name) ~ \"porgies\",\n      grepl(\"Veneridae\", Scientific_Name) ~ \"clams\",\n      TRUE ~ NA\n  )) %>% \n  relocate(model_name, .before = Scientific_Name) %>% \n  mutate(\n    farm_name = case_when(\n      model_name %in% c(\"atlantic_salmon\", \"general_salmonid\") ~ \"Salmonidae fish\",\n      TRUE ~ \"General marine fish\"\n      ),\n      Scientific_Name = droplevels(Scientific_Name)\n    ) %>% \n  # filter(is.na(model_name)) %>% \n  mutate(prop_production = drop_units(production/national_production)) %>% \n  arrange(prop_production)\n\nwrite.csv(mariculture_prod_all, \"mariculture_production_all.csv\")\n\n# Check that farm locations in mapped data are in the same FAO fishing regions as the production data\n\nfarm_fao_intersect <- qread(here(\"data/_general_data/farm_locations/locations_w_fishing_areas.qs\"))\n\n\nfarm_list <- \n  farm_fao_intersect %>% \n  group_by(iso3c, country, species_group) %>% \n  group_split()\n\n#Test function\n\nthis_country_region <- farm_list[[4]]\n\n\n(fao_area_code_check <- \n  map_df(farm_list, \\(this_country_region){\n    \n    farm_country_name <- this_country_region$country %>% unique()\n    farm_iso3c <- this_country_region$iso3c %>% unique()\n    farm_fao_code <- this_country_region$F_CODE %>% unique() %>% sort()\n    farm_spp_grp <- this_country_region$species_group %>% unique()\n    \n    \n    prod_data <- \n      mariculture_prod_all %>% \n      filter(iso3c == farm_iso3c & \n               fao_major_fishing_area_code %in% farm_fao_code & \n               country_name == farm_country_name & \n               farm_name == farm_spp_grp)\n    \n    \n    prod_spp_group <- prod_data$farm_name %>% unique() \n    \n    prod_fao_code <- prod_data$fao_major_fishing_area_code %>% unique() %>% sort()\n    \n    return(\n      tibble(iso3c = farm_iso3c, \n             countryname = farm_country_name, \n             farm_spp_group = farm_spp_grp, \n             mapped_fishing_areas = paste(farm_fao_code, collapse = ' '), \n             production_fishing_areas = paste(prod_fao_code, collapse = ' ')) %>% \n             mutate(same_fishing_area = mapped_fishing_areas == production_fishing_areas))\n\n}) %>% filter(!production_fishing_areas == \"\")\n)\n```\n:::\n\n\n\nAssign species to individual farms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarm_list <- \n  farm_fao_intersect %>% \n  group_by(iso3c, country, species_group, F_CODE) %>% \n  group_split()\n\n\nmap_spp_to_locations_list <- \n  \n  map(.x = farm_list, .f = \\(this_country_region){\n  \n  this_iso3c <- this_country_region$iso3c %>% unique()\n  this_fao_code <- this_country_region$F_CODE %>% unique()\n  this_species_group <- this_country_region$species_group %>% unique()\n  \n  message(\"Processing locations for \", this_species_group, \" in \", this_iso3c, \" and FAO fishing area \", this_fao_code)\n  \n  this_n_farms <- this_country_region %>% nrow()\n\n  this_country_region_spp_production_list <- \n    mariculture_spp_prod %>% \n    filter(iso3c == this_iso3c, farm_name == this_species_group, fao_major_fishing_area_code == this_fao_code) %>% \n    group_by(model_name, national_production) %>% \n    summarise(production = sum(production),\n              prop_production = production/national_production) %>% \n    ungroup() %>% \n    distinct() %>% \n    group_by(model_name) %>% \n    group_split()\n  \n  farm_locations_w_model_spp <- \n    map_df(.x = this_country_region_spp_production_list, .f = \\(this_species_prop){\n    \n    this_spp_n_farms <- round(this_n_farms* this_species_prop$prop_production)\n    \n    set.seed(1234)\n    indices <- sample(nrow(this_country_region), size = this_spp_n_farms)\n      \n    this_spp_locations <- this_country_region[indices,]\n    this_spp_locations$model_name <- this_species_prop$model_name\n\n    this_country_region <- this_country_region[-indices,]\n  \n     return(this_spp_locations)\n    \n  })\n  \n  return(farm_locations_w_model_spp)\n  \n  \n})\n\nmap_spp_to_locations <- bind_rows(lapply(map_spp_to_locations_list, FUN = function(element) if(nrow(element) == 0) NULL else element)) #removes the NULL record returns\n\nqsave(x = map_spp_to_locations, file = here(\"data/_general_data/farm_locations/locations_w_species_fao_area.qs\"))\n```\n:::\n\n\n\nStocking densities from the tonnage per farm and harvest size.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms_w_species <- qread(\"data/_general_data/farm_locations/locations_w_species_fao_area.qs\") \n\nharvest_sizes <- read_csv(\"data/_general_data/harvest_sizes/all_harvest_sizes.csv\") %>% select(-harvest_size_g)\n\nproduction_cycle <- read_csv(\"data/_general_data/production_cycles/production_cycle.csv\") %>% select(species, days)\n\nmortality_rates <- read_csv(\"data/_general_data/mortality_rates/all_mortality_rates.csv\")\n\nfarms_w_stocking <- \n  farms_w_species %>% \n  left_join(harvest_sizes, by = c(\"model_name\" = \"species\")) %>% \n  left_join(production_cycle, by = c(\"model_name\" = \"species\")) %>% \n  left_join(mortality_rates, by = c(\"model_name\" = \"species\")) %>% \n  mutate(harvest_n = tonnes_per_farm/harvest_size_t) %>% \n  mutate(stocking_n = harvest_n * exp(daily_mort_rate*days))\n  \n\nqsave(x = farms_w_stocking, file =  \"data/_general_data/farm_locations/locations_w_species_fao_area_stocking.qs\")\n```\n:::\n\n\n\n# From Rich\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naquaculture_raw <- read_csv(file.path(rdsi_dir, \"raw_data/fao/FAO_fishstat_2020/global_aquaculture_production_1950_2020.csv\"))\n\n(aquaculture_prod <- aquaculture_raw %>% \n  clean_names() %>% \n  select(c(1:7, starts_with(\"x\"))) %>% \n  pivot_longer(names_to = \"year\", values_to = \"production\", cols= -c(1:7)) %>% \n  mutate(year = gsub(pattern=\"x\", replacement = \"\", year)) %>% \n  filter(year %in% c(2015:2020)) %>% \n  group_by(asfis_species_name_2, asfis_species_name_3, environment_name, year) %>% \n  summarise(production = sum(production)) %>% \n    ungroup() %>% \n     filter(environment_name==\"Marine\" & \n           !asfis_species_name_3 %in% c(\"Clams, cockles, arkshells\", \n                                        \"Abalones, winkles, conchs\",\n                                        \"Mussels\", \n                                        \"Oysters\",\n                                        \"Shrimps, prawns\",\n                                        \"Crabs, sea-spiders\",\n                                         \"Freshwater molluscs\",\n                                        \"Squids, cuttlefishes, octopuses\",\n                                        \"Pearls, mother-of-pearl, shells\",\n                                        \"Miscellaneous aquatic plants\",\n                                        \"Scallops, pectens\"),\n         !grepl(\"seaweeds\" , asfis_species_name_3),\n         !grepl(\"molluscs|cucumber|invertebrates\", asfis_species_name_2)) %>% \n    filter(!asfis_species_name_2 %in% c(\"Marine fishes nei\")) %>% \n     group_by(asfis_species_name_2) %>% \n     summarise(production = mean(production)) %>% \n  arrange(-production) %>% \n    mutate(cum_prop = cumsum(production)/sum(production),\n           prop = production/sum(production))\n)\n\nspp_names <- aquaculture_prod %>% \n  filter(asfis_species_name_2 %in% c(\"Atlantic salmon\", \n                                     \"Rainbow trout\", \n                                     \"European seabass\", \n                                     \"Large yellow croaker\",\n                                     \"Gilthead seabream\",\n                                     \"Coho(=Silver) salmon\",\n                                     \"Japanese seabass\", \n                                     \"Japanese amberjack\", \n                                     \"Amberjacks nei\",\n                                     \"Pompano\", \n                                     \"Milkfish\") | \n           grepl(pattern = \"rouper\", asfis_species_name_2) & production > 1) %>% \n  pull(asfis_species_name_2)\n  \n\n\n(mariculture_spp_prod <- aquaculture_raw %>% \n    clean_names() %>% \n    select(c(1:7, starts_with(\"x\"))) %>% \n    pivot_longer(names_to = \"year\", values_to = \"production\", cols= -c(1:7)) %>% \n    mutate(year = gsub(pattern=\"x\", replacement = \"\", year)) %>% \n    filter(year %in% c(2017)) %>% \n    filter(!grepl(\"Inland waters\", fao_major_fishing_area_name)  & \n             !asfis_species_name_3 %in% c(\"Clams, cockles, arkshells\", \n                                          \"Abalones, winkles, conchs\",\n                                          \"Mussels\", \n                                          \"Oysters\",\n                                          \"Shrimps, prawns\",\n                                          \"Crabs, sea-spiders\",\n                                          \"Freshwater molluscs\",\n                                          \"Squids, cuttlefishes, octopuses\",\n                                          \"Pearls, mother-of-pearl, shells\",\n                                          \"Miscellaneous aquatic plants\",\n                                          \"Scallops, pectens\"),\n           !grepl(\"seaweeds\" , asfis_species_name_3),\n           !grepl(\"molluscs|cucumber|invertebrates\", asfis_species_name_2)) %>% \n    group_by(country_name, asfis_species_name_2, asfis_species_name_3, fao_major_fishing_area_name, fao_major_fishing_area_code, year) %>% \n    summarise(production = sum(production)) %>% \n    ungroup() %>% \n    mutate(asfis_species_name_2 = case_when(asfis_species_name_2 == \"Marine fishes nei\" & country_name == \"Viet Nam\" ~ \"Groupers nei\",\n                                            TRUE ~ asfis_species_name_2)) %>% \n    mutate(iso3c = countrycode(sourcevar = country_name, origin = \"country.name\", destination = \"iso3c\", warn =TRUE)) %>% \n    group_by(iso3c, country_name, year) %>% \n    nest() %>% \n    mutate(national_production = map(data, ~(sum(.$production)))) %>% \n    unnest(cols = c(data, national_production)) %>% \n    ungroup() %>% \n    filter(asfis_species_name_2 %in% spp_names) %>% \n    mutate(prop_production = production/national_production) %>% \n    filter(!asfis_species_name_2 %in% c(\"Marine fishes nei\")) %>% \n  mutate(model_name = case_when(grepl(\"rouper\", asfis_species_name_2) ~ \"general_grouper\", \n                                asfis_species_name_2 %in% c(\"Coho(=Silver) salmon\", \"Rainbow trout\") ~ \"general_salmonid\",\n                                asfis_species_name_2 %in% c(\"Amberjacks nei\") ~ \"japanese_amberjack\",\n                                TRUE ~ gsub(pattern = \" \", replacement = \"_\", tolower(asfis_species_name_2)))) %>% \n  relocate(model_name, .before = asfis_species_name_2) %>% \n  filter(prop_production>0) %>% \n    mutate(farm_name = case_when(model_name %in% c(\"atlantic_salmon\", \"general_salmonid\") ~ \"Salmonidae fish\",\n                                 TRUE ~ \"General marine fish\"))\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter country level production for all species in non-inland waters where production is greater than 0 tonnes.\nmariculture_prod_all <- aquaculture_raw %>% \n  clean_names() %>% \n  select(c(1:7, starts_with(\"x\"))) %>% \n  pivot_longer(names_to = \"year\", values_to = \"production\", cols= -c(1:7)) %>% \n  mutate(year = gsub(pattern=\"x\", replacement = \"\", year)) %>% \n  filter(year %in% c(2017)) %>% \n  filter(!grepl(\"Inland waters\", fao_major_fishing_area_name)  & \n            !asfis_species_name_3 %in% c(\"Clams, cockles, arkshells\", \n                                        \"Abalones, winkles, conchs\",\n                                        \"Mussels\", \n                                        \"Oysters\",\n                                        \"Shrimps, prawns\",\n                                        \"Crabs, sea-spiders\",\n                                        \"Freshwater molluscs\",\n                                        \"Squids, cuttlefishes, octopuses\",\n                                        \"Pearls, mother-of-pearl, shells\",\n                                        \"Miscellaneous aquatic plants\",\n                                        \"Scallops, pectens\"),\n          !grepl(\"seaweeds\" , asfis_species_name_3),\n          !grepl(\"molluscs|cucumber|invertebrates\", asfis_species_name_2)) %>% \n  group_by(country_name, asfis_species_name_2, asfis_species_name_3, fao_major_fishing_area_name, fao_major_fishing_area_code, year) %>% \n  summarise(production = sum(production)) %>% \n  ungroup() %>% \n  mutate(iso3c = countrycode(sourcevar = country_name, origin = \"country.name\", destination = \"iso3c\", warn =TRUE)) %>% \n  group_by(iso3c, country_name, year) %>% \n  nest() %>% \n  mutate(national_production = map(data, ~(sum(.$production)))) %>% \n  unnest(cols = c(data, national_production)) %>% \n  ungroup() %>% \n  filter(production>0) %>% \n  filter(!asfis_species_name_2 %in% c(\"Marine fishes nei\")) %>% \n  mutate(model_name = case_when(grepl(\"rouper\", asfis_species_name_2) ~ \"general_grouper\", \n                              asfis_species_name_2 %in% c(\"Coho(=Silver) salmon\", \"Rainbow trout\") ~ \"general_salmonid\",\n                              TRUE ~ gsub(pattern = \" \", replacement = \"_\", tolower(asfis_species_name_2)))) %>% \n  relocate(model_name, .before = asfis_species_name_2) %>% \n  mutate(farm_name = case_when(model_name %in% c(\"atlantic_salmon\", \"general_salmonid\") ~ \"Salmonidae fish\",\n                                TRUE ~ \"General marine fish\")) %>% \n  filter(asfis_species_name_2 %in% spp_names) %>% \n  mutate(prop_production = production/national_production)\n\n\n# Check that farm locations in mapped data are in the same FAO fishing regions as the production data\n\nfarm_fao_intersect <- qread(here(\"data/_general_data/farm_locations/locations_w_fishing_areas.qs\"))\n\n\nfarm_list <- \n  farm_fao_intersect %>% \n  group_by(iso3c, country, species_group) %>% \n  group_split()\n\n#Test function\n\nthis_country_region <- farm_list[[4]]\n\n\n(fao_area_code_check <- \n  map_df(farm_list, \\(this_country_region){\n    \n    farm_country_name <- this_country_region$country %>% unique()\n    farm_iso3c <- this_country_region$iso3c %>% unique()\n    farm_fao_code <- this_country_region$F_CODE %>% unique() %>% sort()\n    farm_spp_grp <- this_country_region$species_group %>% unique()\n    \n    \n    prod_data <- \n      mariculture_prod_all %>% \n      filter(iso3c == farm_iso3c & \n               fao_major_fishing_area_code %in% farm_fao_code & \n               country_name == farm_country_name & \n               farm_name == farm_spp_grp)\n    \n    \n    prod_spp_group <- prod_data$farm_name %>% unique() \n    \n    prod_fao_code <- prod_data$fao_major_fishing_area_code %>% unique() %>% sort()\n    \n    return(\n      tibble(iso3c = farm_iso3c, \n             countryname = farm_country_name, \n             farm_spp_group = farm_spp_grp, \n             mapped_fishing_areas = paste(farm_fao_code, collapse = ' '), \n             production_fishing_areas = paste(prod_fao_code, collapse = ' ')) %>% \n             mutate(same_fishing_area = mapped_fishing_areas == production_fishing_areas))\n\n}) %>% filter(!production_fishing_areas == \"\")\n)\n```\n:::\n",
    "supporting": [
      "02_extracting_production_locations_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}