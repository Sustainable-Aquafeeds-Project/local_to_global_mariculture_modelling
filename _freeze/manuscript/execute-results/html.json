{
  "hash": "ce1cfb030bc15306ae4da4473e5ca8fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Local to global N input modelling\"\n# Author roles: \"writing – original draft\", \"writing – review & editing\", \"formal analysis\", \"funding acquisition\", \"conceptualization\", \"data curation\", \"investigation\", \"methodology\", \"project administration\", \"resources\", \"software\", \"supervision\", \"validation\", \"visualization\"\n\nbibliography: [\"refs.bib\", \"manual-refs.bib\"]\n\nformat: \n  html:\n    theme: simplex\n    css: [\"extra.css\"]\n    code-fold: true\n    code-overflow: wrap\n    toc: true\n    toc-expand: true\n    toc-location: left\n    lang: en-GB\n    grid:\n      sidebar-width: 250px\n      body-width: 1200px\n      margin-width: 250px\n      gutter-width: 2em\n  \nexecute:\n  eval: true\n  echo: false\n  warning: false\n  message: false\n  cache: true\n  freeze: auto\n  \nknitr: \n  opts_chunk:\n    fig.align: center\n    fig.width: 8.5\n\neditor: source\n---\n\n::: {.cell .hidden layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nlibrary(magrittr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'tidyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    extract\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(stringr)\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggplot2' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggh4x)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggh4x' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at C:/Users/treimer/Documents/R-temp-files/local_to_global_mariculture_modelling\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggpubr)\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'cowplot'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:ggpubr':\n\n    get_legend\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'patchwork'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:cowplot':\n\n    align_plots\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(qs)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'qs' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nqs 0.27.3. Announcement: https://github.com/qsbase/qs/issues/103\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'arrow'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    is_in\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(targets)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'terra' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nterra 1.8.54\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'terra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:arrow':\n\n    buffer\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:patchwork':\n\n    area\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:ggpubr':\n\n    rotate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:magrittr':\n\n    extract, inset\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'rnaturalearthdata'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearthhires)\nlibrary(dtplyr)\nlibrary(furrr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: future\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(purrr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'purrr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    set_names\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(future)\nlibrary(readxl)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'readxl' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(units)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'units' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nudunits database from C:/Users/treimer/AppData/Local/R/cache/R/renv/cache/v5/windows/R-4.4/x86_64-w64-mingw32/units/0.8-7/5d0b024902d5da97a2b64f002e92a869/units/share/udunits/udunits2.xml\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(conflicted)\nlibrary(lubridate)\nlibrary(RColorBrewer)\nconflicts_prefer(dplyr::select(), dplyr::filter(), dplyr::intersect(), .quiet = T)\n# This markdown uses TinyTex - install with tinytex::install_tinytex()\n\nremove_unit(\"g_fish\")\nremove_unit(\"kg_fish\")\nremove_unit(\"t_fish\")\ninstall_unit(\"g_fish\")\ninstall_unit(\"kg_fish\", \"1000 g_fish\")\ninstall_unit(\"t_fish\", \"1000 kg_fish\")\n\npackages <- c(\"magrittr\", \"dplyr\", \"tidyr\", \"stringr\", \"ggplot2\", \"arrow\", \"targets\", \"sf\", \"terra\", \"rnaturalearth\", \"furrr\", \"future\", \"units\", \"lubridate\")\n\nhere(\"00_model_functions.R\") %>% source()\n\nremove_unit(\"gN\")\ninstall_unit(\"gN\", \"6.25 g\") # 1/6.25\n```\n:::\n\n::: {.cell .hidden layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nsource(here(\"00_model_functions.R\"))\nsource(here(\"00_dirs.R\"))\n\n# Filenames\nfarm_coords_file <- file.path(output_farm_data_path, \"farm_coords.qs\")\nspecies_params_file <- file.path(output_species_data_path, \"species_params.qs\")\npop_params_file <- file.path(output_species_data_path, \"pop_params.qs\")\nfeed_params_file <- file.path(output_species_data_path, \"feed_params.qs\")\nsens_params_file <- file.path(output_species_data_path, \"sens_params.qs\")\nsens_results_files <- file.path(output_sens_data_path) %>% list.files(full.names = T) %>% str_subset(\"results\")\n\nspecies_params <- qread(species_params_file)\npop_params <- qread(pop_params_file)\n\nprettyplot <- function() {\n  theme_classic() +\n    theme(legend.position = \"none\",\n          text = element_text(family = \"serif\", size = 12, colour = \"black\"),\n          axis.title.x = element_text(vjust = 0.5),\n          axis.title.y = element_text(hjust = 0.5))\n}\n  \nfeed_pal <- c(\"past\" = \"#E41A1C\", \"reference\" = \"#377EB8\", \"future\" = \"#4DAF4A\")  \ncohort_pal <- c(\"1\" = \"#E41A1C\", \"2\" = \"#377EB8\", \"3\" = \"#4DAF4A\", \"all\" = \"black\")\nmacro_pal <- c(\n  \"protein\" = \"darkred\", \"P\" = \"darkred\", \n  \"carbohydrates\" = \"steelblue\", \"C\" = \"steelblue\", \n  \"lipids\" = \"darkgoldenrod1\", \"L\" = \"darkgoldenrod1\"\n)\n```\n:::\n\n\n\nThis document was last updated at 15:42 on 12 Jun, 2025.\n\n# Methods\n### Feeding rate\n\nTo detail here:\n\n* Functional response to temperature (species-specific)\n* Overfeeding parameters and how they come into play\n* Deminstration of how feeding response and actual food given vary with temperature?\n\n\n\n::: {#cell-fig-functional-response-to-temperature .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\ndf <- data.frame(water_temp = seq(-5, 26, 0.25))\ndf$feeding <- sapply(FUN = feeding_rate, X = df$water_temp, species_params = species_params)\ndf <- df %>% \nmutate(ing_pot = pop_params['meanImax'] * (pop_params['meanW']^species_params['m']) * feeding,\n       food_prov = NA)\nfor (i in 1:nrow(df)) {\n  df$food_prov[i] <- food_prov_rate(pop_params = pop_params, rel_feeding = df$feeding[i], ing_pot = df$ing_pot[i], \n                                    ing_pot_10 = pop_params['meanImax'] * (pop_params['meanW']^species_params['m']) * 0.1)\n}\ndf$ing_pot <- df$ing_pot/maxna(df$ing_pot)\ndf$food_prov <- df$food_prov/maxna(df$ing_pot)\n\ndf %>% \n  ggplot(aes(x = water_temp, y = ing_pot)) +\n  geom_line(linewidth = 0.75) +\n  geom_line(aes(y = food_prov), linewidth = 0.75, linetype = \"dotted\") +\n  scale_y_continuous(breaks = seq(0,1.5,0.25)) +\n  scale_x_continuous(breaks = seq(-5,30,5), limits = c(-5,26)) +\n  labs(x = expression(\"Water temperature (\"*degree*\"C)\"), y = \"Relative food ingested/provided\") +\n  prettyplot() +\n  theme(text = element_text(colour = \"black\", family = \"serif\", size = 12))\n```\n:::\n\n\n\n## Farm temperature forcings\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Get general farm info\"}\nfarms_to_omit <- file.path(input_farm_coords_path, \"atlantic_salmon_farms_to_omit.qs\") %>% qs::qread()\nfarm_ts_data <- file.path(output_farm_data_path, \"farm_ts_data.qs\") %>% qs::qread()\nfarm_coords <- file.path(output_farm_data_path, \"farm_coords.qs\") %>% qs::qread() %>% \n    mutate(hemisphere = case_when(lat < 0 ~ \"S\", T ~ \"N\") %>% as.factor()) \n\nfarms_geometry <- file.path(output_farm_data_path, \"farm_geometry.qs\") %>% qs::qread() %>% \n  rename(farm_ID = farm_id)\n\nsorted_countries <- farm_coords %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  group_by(country) %>% \n  reframe(av_lat = mean(lat)) %>% \n  arrange(-av_lat) %>% \n  pull(country) %>% \n  unique()\n\nfarms_geometry <- farms_geometry %>% \n  mutate(country = factor(country, levels = sorted_countries))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Get the farm temperature forcings\"}\nfarm_temp_means <- farm_ts_data %>% \n  group_by(farm_ID) %>% \n  reframe(mean_temp = mean(temp_c)) %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  merge(farm_coords, by = \"farm_ID\") %>% \n  dplyr::filter(!farm_ID %in% farms_to_omit)\n\noverall_mean <- mean(farm_temp_means$mean_temp)\noverall_sd <- sd(farm_temp_means$mean_temp)\n\nrm(farm_ts_data)\n```\n:::\n\n\n\nMean daily temperatures at the farms globally ranged from  from 6$^{\\circ}$C to 16.7$^{\\circ}$C, with an overall mean of 10.1$^{\\circ}$C ($\\pm$ 1.8$^{\\circ}$C SD).\nFarms with a mean temperature of $\\leq$6$^\\circ$C were excluded (4 farms). The total number of farms included in the analysis was therefore 2717. \n\n\n\n::: {#cell-fig-farm-mean-temps .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nworldmap <- ne_countries(scale = \"medium\", returnclass = \"sf\") %>% st_transform(crs = \"+proj=robin\")\ngraticules <- st_graticule(worldmap, lon = seq(-180, 180, 30), lat = seq(-90, 90, 30)) \n\ninset_boxes <- list(   # lonmin, lonmax, latmin, latmax\n  CAN1 = c(-132, -122, 47.75, 54.25),\n  CAN2 = c(-70, -54, 43, 48.5),\n  EUR = c(-26, 30, 51, 72),\n  CHI = c(-77.5, -62.5, -56, -25),\n  AUS = c(144, 149.5, -44, -39.75)\n)\nlabels_spec <- c(CAN1 = \"bottom_left_outside\", CAN2 = \"bottom_right_outside\", EUR = \"bottom_left_outside\", CHI = \"top_left_outside\", AUS = \"bottom_left_outside\")\nlabels_offset <- c(CAN1 = 1, CAN2 = 2, EUR = 1.75, CHI = 1.75, AUS = 3.5)\n\nbox_data <- create_boxes(box_list = inset_boxes, # see function create_boxes above\n                         label_positions = unname(labels_spec),\n                         offset_deg = unname(labels_offset))\nboxes_robinson <- st_transform(box_data$boxes, crs = \"+proj=robin\")\nlabels_robinson <- st_transform(box_data$labels, crs = \"+proj=robin\")\nfarm_temp_robinson <- st_sf(farm_temp_means) %>% st_transform(crs = \"+proj=robin\")\n\np_big_map <- ggplot() +\n  geom_sf(data = graticules, color = \"gray80\", size = 0.3) +\n  geom_sf(data = worldmap, fill = \"white\", color = \"dimgray\") +\n  geom_sf(data = farm_temp_robinson, aes(color = mean_temp), size = 1) +\n  coord_sf() +\n  scale_color_viridis_c(option = \"turbo\") +\n  guides(col = guide_colourbar(\n    title = \"Mean temperature (°C)\",\n    direction = \"horizontal\", position = \"bottom\",\n    label.position = \"bottom\", title.position = \"top\", \n    title.vjust = 1, title.hjust = 0.5,\n    frame.colour = \"black\", ticks.colour = \"black\",ticks.linewidth = 2,\n    barwidth = 25,barheight = 1.5\n  )) +\n  geom_sf(data = boxes_robinson, fill = NA, color = \"darkred\", size = 1.65) +\n  geom_sf_text(data = labels_robinson, aes(label = letter), \n               color = \"darkred\", size = 5, fontface = \"bold\", \n               hjust = 0.5, vjust = 0.5) +\n  theme_void()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np2 <- farm_temp_means %>% \n  ggplot(aes(y = mean_temp, x = abs(lat), colour = country)) +\n  geom_point(size = 2) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(x = expression(\"Absolute latitude (\"*degree*\")\"), y = expression(\"Mean temperature (\"*degree*\"C)\")) +\n  prettyplot() +\n  theme(legend.position = \"top\", legend.title = element_blank())\n\np3 <- farm_temp_means %>% \n  mutate(hemisphere = case_when(lat < 0 ~ \"S\", T ~ \"N\")) %>% \n  ggplot(aes(x = mean_temp, fill = hemisphere)) +\n  geom_histogram(position = \"identity\", colour = \"black\", alpha = 0.5, binwidth = 0.5) +\n  labs(x = expression(\"Mean temperature (\"*degree*\"C)\"), y = \"Frequency\") +\n  prettyplot() +\n  theme(legend.position = \"top\", legend.title = element_blank())\n\n(p2 + p3) / p_big_map + plot_layout(heights = c(1, 1.5))\n```\n\n::: {.cell-output-display}\n![Potential options for showing data spatially. Top left: Mean temperature by latitude across countries. Top right: Frequency distribution of mean temperatures by hemisphere. Bottom: global distribution of mean temperatures.\n](manuscript_files/figure-html/fig-farm-mean-temps-1.png){#fig-farm-mean-temps fig-align='center' width=912}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nno_margins <- function() {\n  theme(legend.position = \"none\", \n        plot.margin = margin(0, 0, 0, 0),\n        axis.title = element_blank())\n}\n\ninset_boxes_sm <- list(   # lonmin, lonmax, latmin, latmax\n  CAN1 = c(-132, -122, 48.5, 54),\n  CAN2 = c(-70, -54, 43, 48.5),\n  EUR = c(-23, 28.5, 52, 71),\n  CHI = c(-78, -62, -55.5, -27),\n  AUS = c(144, 149, -43.75, -40.75)\n)\n\ninset_boxes_sm <- map(inset_boxes_sm, function(bx) {\n  list(\n    xlims = bx[1:2],\n    ylims = bx[3:4],\n    labx = bx[1],\n    laby = bx[4]\n    )\n})\n\nworldmap <- ne_countries(scale = \"large\", returnclass = \"sf\")\np1 <- ggplot() +\n  geom_sf(data = worldmap, fill = \"white\", color = \"dimgray\") +\n  geom_sf(data = farm_temp_means, aes(color = mean_temp, geometry = geometry), size = 2) +\n  coord_sf() +\n  scale_color_viridis_c(option = \"turbo\") +\n  guides(col = guide_colourbar(\n    title = \"Mean temperature (°C)\",\n    direction = \"vertical\", position = \"right\",\n    label.position = \"right\", title.position = \"top\", \n    title.vjust = 1, title.hjust = 0.5,\n    frame.colour = \"black\", ticks.colour = \"black\",ticks.linewidth = 2,\n    barwidth = 1.5, barheight = 20\n  )) +\n  prettyplot() +\n  labs(y = \"Latitude\", x = \"Longitude\")\n\np_Can1 <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CAN1\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"CAN1\"]][[\"ylims\"]])  +\n  draw_label(\"A\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CAN1\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"CAN1\"]][[\"laby\"]], \n             hjust = -1, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Can2 <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CAN2\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"CAN2\"]][[\"ylims\"]])  +\n  draw_label(\"B\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CAN2\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"CAN2\"]][[\"laby\"]], \n             hjust = 0.5, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Eur <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"EUR\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"EUR\"]][[\"ylims\"]])  +\n  draw_label(\"C\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"EUR\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"EUR\"]][[\"laby\"]], \n             hjust = -1, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Chi <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CHI\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"CHI\"]][[\"ylims\"]])  +\n  theme(legend.position = \"right\") +\n  draw_label(\"D\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CHI\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"CHI\"]][[\"laby\"]], \n             hjust = 0, vjust = 0)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Aus <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"AUS\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"AUS\"]][[\"ylims\"]])  +\n  draw_label(\"E\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"AUS\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"AUS\"]][[\"laby\"]], \n             hjust = 0, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngrid_1 <- cowplot::plot_grid(p_Can1, p_Can2, ncol = 2, rel_widths =  c(1, 1.35))\ngrid_2 <- cowplot::plot_grid(p_Eur,  p_Aus,  nrow = 2, rel_heights = c(1, 1))\ngrid_3 <- cowplot::plot_grid(grid_2, p_Chi,  ncol = 2, rel_widths =  c(1, 1))\n\ncowplot::plot_grid(\n  grid_1, grid_3,\n  nrow = 2,\n  rel_heights = c(1, 1.5)        # relative row heights\n)\n```\n\n::: {.cell-output-display}\n![Example of a patchwork\n](manuscript_files/figure-html/patchwork-map-mercator-1.png){fig-align='center' width=912}\n:::\n:::\n\n\n\n## Model parameterisation\n\n<!-- Salmon were grown for 548 days and were initialised in Spring. This was on day 274 for farms in the southern hemisphere and day 121 for farms in the northern hemisphere. Cohorts were initialised annually, such that there was an overlap of 183 days where one cohort was nearing harvest and another was being initialised. -->\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Get parameter and sensitivity data\"}\nparams <- file.path(output_species_data_path, \"sens_params.qs\") %>% qs::qread()\n\nparam_names <- tibble::tribble(\n  ~name,        ~lab,\n  \"alpha\",      bquote(alpha),\n  \"epsprot\",    bquote(epsilon[\"P\"]),\n  \"epslip\",     bquote(epsilon[\"L\"]),\n  \"epscarb\",    bquote(epsilon[\"C\"]),\n  \"epsO2\",      bquote(epsilon[\"O\"[2]]),\n  \"pk\",         bquote(\"pk\"),\n  \"k0\",         bquote(\"k\"[0]),\n  \"m\",          bquote(\"m\"),\n  \"n\",          bquote(\"n\"),\n  \"betac\",      bquote(beta*\"C\"),\n  \"Tma\",        bquote(\"T\"[\"max\"]),\n  \"Toa\",        bquote(\"T\"[\"opt\"]),\n  \"Taa\",        bquote(\"T\"[\"min\"]),\n  \"omega\",      bquote(omega),\n  \"a\",          bquote(\"a\"),\n  \"k\",          bquote(\"k\"),\n  \"eff\",        bquote(\"eff\"),\n  \"meanW\",      bquote(bar(\"W\")),\n  \"deltaW\",     bquote(Delta*\"W\"), \n  \"meanImax\",   bquote(bar(\"I\"[\"max\"])),\n  \"deltaImax\",  bquote(Delta*\"I\"[\"max\"]),\n  \"overFmean\",  bquote(bar(\"F\")),\n  \"overFdelta\", bquote(Delta*\"F\"),\n  \"mortmyt\",    bquote(\"mort\")\n)\n```\n:::\n\n\n\n| Parameter | Value | Reference |\n|:------:|:------:|:-----------:|\n| $\\alpha$             | 0.04      | @broekhuizen_modelling_1994 |\n| $\\epsilon_{P}$       | 2.36\\times 10^{4}    | @baldan_r_2018 |\n| $\\epsilon_{L}$       | 3.62\\times 10^{4}     | @baldan_r_2018 |\n| $\\epsilon_{C}$       | 1.72\\times 10^{4}    | @baldan_r_2018 |\n| $\\epsilon_{O_2}$     | 1.34\\times 10^{4}      | @elliott_energy_1975 |\n| $p_k$                | 0.05         | @macnaughton_using_2019 |\n| $k_0$                | 0.003         | @macnaughton_using_2019 |\n| $m$                  | 0.75          | @broekhuizen_modelling_1994 | \n| $n$                  | 1          | @baldan_r_2018 |\n| $\\beta C$            | 0.3234      | @jonsson_thermal_2001 |\n| $T_{max}$            | 26        | @poletto_unusual_2017 | \n| $T_{opt}$            | 16        | @jonsson_thermal_2001 | \n| $T_{min}$            | 2        | @vadboncoeur_lowering_2023 | \n| $\\omega$             | 0.6542      | @baldan_r_2018 |\n| $a$                  | 2669          | @van_tien_development_2016 |\n| $k$                  | 0.1715          | @van_tien_development_2016 | \n| $eff$                | 0.97        | @uglem_does_2020 | \n| $\\overline{W}$       | 125      | @dempsey_estimating_2023 | \n| $\\Delta{W}$          | 10     | @dempsey_estimating_2023 | |\n| $\\overline{I_{max}}$ | 0.035   | @lall_nutrition_2009 | \n| $\\Delta{I_{max}}$    | 0.005  | @lall_nutrition_2009 | \n| $\\overline{F}$       | 0.015  | |\n| $\\Delta{F}$          | 0.0045 | |\n| $mort$               | 5.99798\\times 10^{-4}    | @tvete_towards_2023 |\n: Model growth parameters for Atlantic salmon (for double-checking numbers and reference list only) {#tbl-params}\n\n### Parameter sensitivity\n\nParameter sensitivity was tested by varying each parameter in @tbl-params by $\\pm 10$% and calculating sensitivity as $S_p = \\frac{(P_{1.1} - P_{0.9})}{0.2 \\times P_1}$, where $S$ is the sensitivity of the measured variable to changes in parameter $p$, and $P_{1.1}$, $P_{0.9}$, and $P_{1}$ are the value of the measured variable when the model is run with parameter $p$ at 110%, 90%, and 100% of its value respectively. \nAll parameters in Table @tbl-params were tested. The population-level parameters ($\\overline{W}$, $\\Delta{W}$, $\\overline{I_{max}}$, $\\Delta{I_{max}}$, $\\overline{F}$, $\\Delta{F}$) were tested with a population of of 5000 on a random 10% of farms, while all other parameters were tested across all farms with a population of 10.\n \n## Modelled experimental feeds {#sec-feeds}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nfeed_params <- file.path(output_species_data_path, \"feed_params.qs\") %>%\n  qs::qread() \n\nfeed_summary <- map_dfr(names(feed_params), function(feed) {\n  df <- feed_params[[feed]]\n  map_dfr(c(\"Proteins\", \"Lipids\", \"Carbohydrates\"), function(macro) {\n    contrib <- df[[macro]]$proportion * df[[macro]]$macro\n    total <- sum(contrib)\n    digest <- sum(df[[macro]]$digest * contrib) / total\n        tibble(\n      feed = feed,\n      macro = macro,\n      total = total,\n      digest = digest\n    )\n  })\n}) %>%\n  mutate(macro = factor(macro, levels = c(\"Proteins\", \"Lipids\", \"Carbohydrates\"), labels = c(\"P\", \"L\", \"C\")),\n         feed = factor(feed, levels = c(\"reference\", \"past\", \"future\")),\n         total_r = total * 100 %>% round(1),\n         digest_r = digest * 100 %>% round(1))\n```\n:::\n\n\n\nThe reference feed was \n37.8% protein, \n36.5% lipid, and \n20.4% carbohydrate, the past feed was \n49.8% protein, \n27.1% lipid, and \n16.6% carbohydrate, and the future feed was \n47.7% protein, \n32.9% lipid, and \n13.9% carbohydrate.\n\nIngredients are tracked seperately through the model with their own digestibility coefficients. \nOverall, protein digestibility was \n89.2%,\n90.5%, and \n86.2% and carbohydrate digestibility was \n69.6%,\n79.7%, and \n69.3%\nwithin the reference, past, and future feeds respectively. \nThe digestibility of lipids was assumed to remain constant across all ingredients at 96%. \n\n\n\n::: {#cell-fig-feed-summary-ideas .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\np1 <- feed_summary %>%\n  mutate(digest_total = digest * total) %>% \n  ggplot(aes(x = feed, y = total, fill = macro)) +\n  geom_col(position = \"dodge\", alpha = 0.55, colour = \"black\") +\n  geom_col(mapping = aes(y = digest_total), position = \"dodge\", alpha = 1, colour = \"black\") +\n  scale_fill_manual(values = macro_pal) +\n  scale_y_continuous(breaks = seq(0,0.5,0.1), labels = seq(0,50,10)) +\n  scale_x_discrete(labels = c(\"reference\" = \"Reference\", \"past\" = \"Past\", \"future\" = \"Future\")) +\n  labs(x = \"Feed\", y = \"Proportion (%)\") +\n  prettyplot()\n\nfeed_ings <- rbind(\n  feed_params[[1]][[1]] %>% mutate(feed = as.factor(\"reference\")), \n  feed_params[[2]][[1]] %>% mutate(feed = as.factor(\"past\")), \n  feed_params[[3]][[1]] %>% mutate(feed = as.factor(\"future\"))\n) %>%\n  rename(protein = macro) %>%\n  mutate(\n    category = case_when(\n      str_detect(ingredient, \"fish-oil\") ~ \"fish\",\n      str_detect(ingredient, \"fishmeal\") ~ \"fish\",\n      str_detect(ingredient, \"krill\") ~ \"other-marine\",\n      str_detect(ingredient, \"soy\") ~ \"legume\",\n      str_detect(ingredient, \"pea\") ~ \"legume\",\n      str_detect(ingredient, \"guar\") ~ \"legume\",\n      str_detect(ingredient, \"faba\") ~ \"legume\",\n      str_detect(ingredient, \"corn\") ~ \"wheat-corn\",\n      str_detect(ingredient, \"wheat\") ~ \"wheat-corn\",\n      str_detect(ingredient, \"chicken\") ~ \"chicken\",\n      str_detect(ingredient, \"bacteri\") ~ \"bact-fungi-micro\",\n      str_detect(ingredient, \"yeast\") ~ \"bact-fungi-micro\",\n      str_detect(ingredient, \"spirulina\") ~ \"bact-fungi-micro\",\n      str_detect(ingredient, \"bsf\") ~ \"insect\",\n      T ~ \"other-plant\"\n    ) %>% \n      factor(levels = c(\"fish\", \"other-marine\", \"chicken\", \"wheat-corn\", \"legume\", \"other-plant\", \"insect\", \"bact-fungi-micro\"))\n  )\n\np_ings <- feed_ings %>% \n  mutate(feed = factor(feed, levels = c(\"reference\", \"past\", \"future\"), labels = c(\"Reference\", \"Past\", \"Future\"))) %>% \n  group_by(feed, category) %>%\n  reframe(proportion = sum(proportion)) %>% \n  ggplot(aes(x = \"\", y = proportion, fill = category)) +\n  geom_col(width = 1, colour = \"black\") +\n  coord_polar(\"y\", start = 0) +\n  scale_fill_manual(\n    name = \"Ingredient category\",\n    values = c(\"fish\" = \"royalblue3\", \"other-marine\" = \"turquoise2\", \"chicken\" = \"hotpink1\", \"wheat-corn\" = \"moccasin\", \"legume\" = \"forestgreen\", \"other-plant\" = \"darkolivegreen1\", \"insect\" = \"firebrick3\", \"bact-fungi-micro\" = \"darkorange\"), \n    labels = c(\"Fish meal or oil\", \"Other marine ingredients\", \"Chicken\", \"Wheat and corn\", \"Legumes\", \"Other plant ingredients\", \"Insects\", \"Bacteria, fungi or microalgae\")) +\n  facet_grid(cols = vars(feed)) +\n  theme_void() +\n  theme(\n    text = element_text(family = \"serif\", size = 12, colour = \"black\"),\n    legend.position = \"bottom\",\n    legend.title = element_blank(), \n    strip.text = element_blank(),\n    strip.text.x = element_text(size = 14)\n  )\n\nplot_grid(p1, p_ings, nrow = 2)\n```\n\n::: {.cell-output-display}\n![Ideas for how to present the differences between feeds. Top plot shows the protein (red), lipids (yellow) and carbohydrate (blue) composition, with the digestible portion shown darker and the undigestible portion shown lighter. Bottom plot shows the proportion of each feed composed of each types of ingredient.](manuscript_files/figure-html/fig-feed-summary-ideas-1.png){#fig-feed-summary-ideas fig-align='center' width=816}\n:::\n:::\n\n\n\n## Model population and biomass\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nfarmrun_files <- file.path(output_cohorts_data_path) %>% \n  list.files(full.names = T)\n\nweight <- find_read(output_cohorts_data_path, \"allfarms_comparisons_weight_stat\")\nbiomass <- find_read(output_cohorts_data_path, \"allfarms_comparisons_biomass_stat\")\n```\n:::\n\n::: {#cell-fig-cohorts .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nfnms <- output_growth_data_path %>% \n  list.files(full.names = T) %>% \n  str_subset(\"reference\")\n\ndf <- qs::qread(fnms[1])[[\"biomass_stat\"]] %>% \n  as.data.frame() %>% \n  mutate(mean = set_units(mean, \"g\") %>% set_units(\"t\"),\n         sd = set_units(sd, \"g\") %>% set_units(\"t\")) %>% \n  select(-farm_ID)\n\ndf <- rbind(\n  df %>% mutate(cohort = 1),\n  df %>% mutate(t = t+365, cohort = 2),\n  df %>% mutate(t = t+730, cohort = 3)\n) %>% \n  mutate(t = (t-min(t))+1,\n         split = \"Split by cohort\")\n\nmin_t <- min(df$t[df$cohort == 2])\nmax_t <- max(df$t[df$cohort == 2])\n\ndf_2 <- df %>% \n  filter(t %in% min_t:max_t) %>% \n  mutate(sd = sd/mean) %>% \n  group_by(t) %>% \n  reframe(sd = sqrt(sum(sd^2)),\n          mean = sum(mean),\n          sd = sd*mean) %>% \n  mutate(cohort = \"all\",\n         split = \"Totalled\")\n\ndf <- rbind(df, df_2) %>% \n  mutate(cohort = as.factor(cohort))\n\nggplot(df, aes(x = t, y = mean, ymin = mean-sd, ymax = mean+sd, colour = as.factor(cohort))) +\n  geom_line(linewidth = 0.75) +\n  geom_ribbon(linetype = \"dotted\", alpha = 0) +\n  facet_grid(cols = vars(split)) +\n  scale_x_continuous(breaks = seq(0, 1600, 120)) +\n  scale_colour_manual(values = cohort_pal) +\n  prettyplot() +\n  labs(y = \"Farm biomass\", x = \"Day of production\")\n```\n\n::: {.cell-output-display}\n![Example of how the overlapping cohorts combine into a single farm production curve (in this case biomass). The left plot shows the farm biomass produced by each cohort from initialisation to harvest, while the right plot shows the combined farm biomass over the course of a single production period of 548 days.\n](manuscript_files/figure-html/fig-cohorts-1.png){#fig-cohorts fig-align='center' width=816}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\ncoho_biom <- file.path(data_analysis_path, \"biomass_produced_comparison.qs\") %>% \n  qs::qread()\nharv_size <- file.path(output_farm_data_path, \"farm_harvest_size.qs\") %>% \n  qread()\n\ncoho_biom_summ <- coho_biom %>% \n  mutate(perc_diff = 100*(mean - tonnes_per_farm)/tonnes_per_farm)\n```\n:::\n\n\n\nEach farm's final population was calculated by dividing the production tonnage required by the average modelled individual harvest size for each farm (when feed reference feed). A population timeseries was the generated using the standard mortality rate (5.99798\\times 10^{-4} d$^{-1}$). Using this method, a farm's 'population' is not a good representation of the actual number of individuals being farmed, but it ensures each farm location is producing the correct tonnage while allowing comparisons between the different feeds. \n\n\n\n::: {#cell-fig-harvest-size .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\nharv_size %>% \n  mutate(weight = weight %>% set_units(\"g\") %>% set_units(\"kg\")) %>% \n  select(c(farm_ID, weight)) %>% \n  ggplot(aes(x = weight)) +\n  geom_histogram(binwidth = 0.25, colour = \"black\", fill = \"salmon\", alpha = 0.75) +\n  scale_y_continuous(limits = c(0,500)) +\n  labs(y = \"Frequency\", x = \"Harvest weight\") +\n  prettyplot() +\n  theme(aspect.ratio = 0.75)\n```\n\n::: {.cell-output-display}\n![Frequency distribution of harvest sizes used to create the population timeseries for each farm, as predicted by the fish-growth model. ](manuscript_files/figure-html/fig-harvest-size-1.png){#fig-harvest-size fig-align='center' width=816}\n:::\n::::\n:::\n\n\n\nBy this method, farm biomass as predicted by the model slightly overestimated farm tonnage. Predicted farm biomass was 2.4-6.5 higher than tonnage produced (@fig-biomass-produced). This variation was not correlated with mean farm temperature or total tonnage produced (@fig-biomass-variation). \n\n\n\n::: {#cell-fig-biomass-variation .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\nplot(coho_biom_summ$temp_c, coho_biom_summ$perc_diff)\n# plot(coho_biom_summ$tonnes_per_farm, coho_biom_summ$perc_diff)\n```\n\n::: {.cell-output-display}\n![](manuscript_files/figure-html/fig-biomass-variation-1.png){#fig-biomass-variation fig-align='center' width=816}\n:::\n::::\n:::\n\n::: {#cell-fig-biomass-produced .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\ncoho_biom %>% \n  ggplot(aes(x = tonnes_per_farm, y = mean, colour = country)) +\n  geom_point(size = 2.5) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\") +\n  scale_x_continuous(limits = c(0,1700)) +\n  scale_y_continuous(limits = c(0,1700)) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(y = \"Modelled biomass produced (t)\", x = \"Observed biomass produced (t)\") +\n  prettyplot() +\n  theme(legend.position = \"top\", legend.title = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 20 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Modelled vs observed salmon biomass produced](manuscript_files/figure-html/fig-biomass-produced-1.png){#fig-biomass-produced fig-align='center' width=816}\n:::\n::::\n:::\n\n\n\n## Impacts of nutrient input\n\nGeneral thoughts is that a risk-assessment approach is most compelling: \n\n* Hazard: Nutrient input. Present as a change between feeds (%?), relative to background levels (ratio?)\n  * Possibly ask Camille how the quotas for Tasmanian salmon are calculated\n  * Background levels are from [oceanhealthindex.org](https://knb.ecoinformatics.org/view/resource_map_doi:10.5063/F1610XPS) - double-check that it includes wastewater input AND agriculture - should include both - if they're not combined ask Ben because he has them combined somewhere\n  * If this is too uncertain perhaps combine into categorical (oligotrophic/eutrophic) classification?\n* Exposure: Species presence. Use IUCN/Aquamap data to estimate the % of each species range is occupied by farms\n  * give each farm a 1km radius, check for overlaps\n  * Gage already has the data to process the Aquamap data\n* Vulnerability: species vulnerability to eutrophication + nutrient input - from @butt_trait-based_2022. Possibly also use IUCN threat levels for prioritisation?\n\n# Statistical analysis & code availability\n\nAll analysis was conducted in R version 4.4.2 \"Pile of Leaves\" [@R_base]. \nMajor packages used include packages `magrittr`, version 2.0.3 [@magrittr], `dplyr`, version 1.1.4 [@dplyr], `tidyr`, version 1.3.1 [@tidyr], `stringr`, version 1.5.1 [@stringr], `ggplot2`, version 3.5.2 [@ggplot2], `arrow`, version 20.0.0.2 [@arrow], `targets`, version 1.11.3 [@targets], `sf`, version 1.0.21 [@sf], `terra`, version 1.8.54 [@terra], `rnaturalearth`, version 1.1.0 [@rnaturalearth], `furrr`, version 0.3.1 [@furrr], `future`, version 1.58.0 [@future], `units`, version 0.8.7 [@units], and `lubridate`, version 1.9.4 [@lubridate].\nFor a full list of R packages used see the lockfile on [Github](https://www.github.com).\nThis manuscript was written in Quarto [@quarto] using TinyTex [@tinytex] and the acronyms extension [@acronyms]. \n\n# Results\n\n* Parameter sensitivity results are in supplementary @sec-parameter-sensitivity\n\nIn general, data outputs comes in the following dimensions:\n\n* Location -> temperature -> farm_ID\n* Uneaten feed + excreted faeces = total inputs (g)\n* Day of production (impacted by location)\n* Main point is the difference between feeds (kg/t salmon).\n* Also interesting to see if difference between feeds varies geographically (correlates with latitude, or maybe mean/median/max temperature?)\n\n## Uneaten feed and faeces\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Load and prep uneaten feed and faeces data (keep in g faeces/feed)\"}\nmass_inputs_ts <- find_read(data_analysis_path, \"all_waste_inputs\")\nmass_inputs_end <- find_read(data_analysis_path, \"sumtotal_waste_inputs.qs\")\nN_inputs_ts <- find_read(data_analysis_path, \"all_N_inputs\")\nN_inputs_end <- find_read(data_analysis_path, \"sumtotal_N_inputs\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Show how inputs (mass and N) change through time (across all farms)\"}\nmass_inputs_ts\nN_inputs_ts\n\n# Through time\ninputs_stats_ts <- inputs_df %>%\n  group_by(feed, t, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g\"),\n          mean = meanna(mean))\n\ninputs_stats_rel_ts <- inputs_rel_df %>% \n  group_by(feed, t, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g g_fish-1\"),\n          mean = meanna(mean))\n\n# Total (at production end)\ninputs_stats_end <- inputs_df %>% \n  group_by(feed, measure, farm_ID) %>% \n  reframe(mean = sumna(mean)) %>% \n  group_by(feed, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g\"),\n          mean = meanna(mean))\n\ninputs_stats_rel_end <- inputs_rel_df %>% \n  group_by(feed, measure, farm_ID) %>% \n  reframe(mean = sumna(mean)) %>% \n  group_by(feed, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g g_fish-1\"),\n          mean = meanna(mean))\n\ninputs_stats_rel_end_diff <- inputs_rel_df %>% \n  group_by(feed, measure, farm_ID) %>% \n  reframe(mean = sumna(mean)) %>% \n  pivot_wider(names_from = feed, values_from = mean) %>% \n  mutate(future = (future-reference)/reference,\n         past = (past-reference)/reference) %>% \n  select(-reference) %>% \n  pivot_longer(cols = c(past, future), names_to = \"feed\", values_to = \"diff\") %>% \n  mutate(feed = factor(feed, levels = c(\"past\", \"future\"))) %>% \n  group_by(feed, measure) %>% \n  reframe(min = minna(diff),\n          max = maxna(diff),\n          sd = sdna(diff),\n          mean = meanna(diff))\n\n# Pull key values (uneaten feed)\nu_stmin1 <- filter(inputs_stats_rel_end, feed == \"reference\", measure == \"uneat\") %>% pull(min)\nu_stmax1 <- filter(inputs_stats_rel_end, feed == \"reference\", measure == \"uneat\") %>% pull(max)\nu_stmean1 <- filter(inputs_stats_rel_end, feed == \"reference\", measure == \"uneat\") %>% pull(mean)\nu_stmin2 <- filter(inputs_stats_rel_end_diff, feed == \"past\", measure == \"uneat\") %>% pull(min)\nu_stmax2 <- filter(inputs_stats_rel_end_diff, feed == \"past\", measure == \"uneat\") %>% pull(max)\nu_stmean2 <- filter(inputs_stats_rel_end_diff, feed == \"past\", measure == \"uneat\") %>% pull(mean)\nu_stmin3 <- filter(inputs_stats_rel_end_diff, feed == \"future\", measure == \"uneat\") %>% pull(min)\nu_stmax3 <- filter(inputs_stats_rel_end_diff, feed == \"future\", measure == \"uneat\") %>% pull(max)\nu_stmean3 <- filter(inputs_stats_rel_end_diff, feed == \"future\", measure == \"uneat\") %>% pull(mean)\n\n# Convert past and future values to % change values\nu_stmin2 <- (100*u_stmin2) %>% round(2)\nu_stmax2 <- (100*u_stmax2) %>% round(2)\nu_stmean2 <- (100*u_stmean2) %>% round(2)\nu_stmin3 <- (100*u_stmin3) %>% round(2)\nu_stmax3 <- (100*u_stmax3) %>% round(2)\nu_stmean3 <- (100*u_stmean3) %>% round(2)\n\nu_stmin1 <- u_stmin1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\nu_stmax1 <- u_stmax1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\nu_stmean1 <- u_stmean1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\n\n# Pull key values (excreted faeces)\ne_stmin1 <- filter(inputs_stats_rel_end, feed == \"reference\", measure == \"excr\") %>% pull(min)\ne_stmax1 <- filter(inputs_stats_rel_end, feed == \"reference\", measure == \"excr\") %>% pull(max)\ne_stmean1 <- filter(inputs_stats_rel_end, feed == \"reference\", measure == \"excr\") %>% pull(mean)\ne_stmin2 <- filter(inputs_stats_rel_end_diff, feed == \"past\", measure == \"excr\") %>% pull(min)\ne_stmax2 <- filter(inputs_stats_rel_end_diff, feed == \"past\", measure == \"excr\") %>% pull(max)\ne_stmean2 <- filter(inputs_stats_rel_end_diff, feed == \"past\", measure == \"excr\") %>% pull(mean)\ne_stmin3 <- filter(inputs_stats_rel_end_diff, feed == \"future\", measure == \"excr\") %>% pull(min)\ne_stmax3 <- filter(inputs_stats_rel_end_diff, feed == \"future\", measure == \"excr\") %>% pull(max)\ne_stmean3 <- filter(inputs_stats_rel_end_diff, feed == \"future\", measure == \"excr\") %>% pull(mean)\n\n# Convert past and future values to % change values\ne_stmin2 <- (100*e_stmin2) %>% round(2)\ne_stmax2 <- (100*e_stmax2) %>% round(2)\ne_stmean2 <- (100*e_stmean2) %>% round(2)\ne_stmin3 <- (100*e_stmin3) %>% round(2)\ne_stmax3 <- (100*e_stmax3) %>% round(2)\ne_stmean3 <- (100*e_stmean3) %>% round(2)\n\ne_stmin1 <- e_stmin1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\ne_stmax1 <- e_stmax1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\ne_stmean1 <- e_stmean1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Show how waste inputs change in total (at the end of a production period) across all farms\"}\nmass_inputs_sep <- mass_inputs_end %>% \n  mutate(waste_per_biomass = set_units(total/biomass_total, \"g kg_fish-1\")) %>% \n  dplyr::select(-c(total, biomass_total)) %>% \n  pivot_wider(names_from = measure, values_from = waste_per_biomass) %>% \n  mutate(total = excr+uneat) %>% \n  pivot_longer(names_to = \"measure\", values_to = \"waste_per_biomass\", cols = c(total, excr, uneat), names_transform = list(measure = as.factor)) %>% \n  group_by(feed, measure) %>% \n  reframe(mean_wpb = meanna(waste_per_biomass),\n          mean_wpb = sdna(waste_per_biomass) %>% set_units(\"g kg_fish-1\"),\n          min_wpb = minna(waste_per_biomass),\n          max_wpb = maxna(waste_per_biomass))\n\ntwi_min <- mass_inputs_sep$min_wpb[mass_inputs_sep$measure == \"total\"] %>% round(2)\ntwi_max <- mass_inputs_sep$max_wpb[mass_inputs_sep$measure == \"total\"] %>% round(2)\ntwi_mean <- mass_inputs_sep$mean_wpb[mass_inputs_sep$measure == \"total\"] %>% round(2)\n\n# There were only very small differences in total uneaten feed between the different feeds, with the past feed increasing uneaten feed by `r u_stmin2`-`r u_stmax2`%  (mean of `r u_stmean2`%) and the future feed increasing uneaten feed by `r u_stmin3`-`r u_stmax3`%  (mean of `r u_stmean3`%).\n\n# * Total excreted faeces across a cohort fed the reference feed ranged from `r e_stmin1` to `r e_stmax1` g kg$^{-1}$ fish, with a mean of `r e_stmean1` g kg$^{-1}$ fish. \n# * Past feed decreased excreted faeces by `r -1*e_stmin2`-`r -1*e_stmax2`%  (mean of `r -1*e_stmean2`%) \n# * Future feed increased excreted faeces by `r e_stmin3`-`r e_stmax3`%  (mean of `r e_stmean3`%)\n```\n:::\n\n\n\n* Total waste inputs across a single production period of fish fed the reference feed ranged from 151.45 to 252.66 g kg$^{-1}$ fish, with a mean of 15.74 g kg$^{-1}$ fish.\n* Total waste inputs across a single production period of fish fed the past feed ranged from 127.58 to 213.51 g kg$^{-1}$ fish, with a mean of 13.31 g kg$^{-1}$ fish.\n* Total waste inputs across a single production period of fish fed the future feed ranged from 157.16 to 262.39 g kg$^{-1}$ fish, with a mean of 16.35 g kg$^{-1}$ fish.\n\n\n\n::: {#cell-fig-waste-inputs-total .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nmass_inputs_sep_geometry <- mass_inputs_end %>% \n  mutate(waste_per_biomass = set_units(total/biomass_total, \"g kg_fish-1\")) %>% \n  dplyr::select(-c(total, biomass_total)) %>% \n  pivot_wider(names_from = measure, values_from = waste_per_biomass) %>% \n  mutate(total = excr+uneat) %>% \n  pivot_longer(names_to = \"measure\", values_to = \"waste_per_biomass\", cols = c(total, excr, uneat), names_transform = list(measure = as.factor)) %>% \n  group_by(farm_ID, feed, measure) %>% \n  reframe(mean_wpb = meanna(waste_per_biomass),\n          sd_wpb = sdna(waste_per_biomass) %>% set_units(\"g kg_fish-1\"),\n          min_wpb = minna(waste_per_biomass),\n          max_wpb = maxna(waste_per_biomass)) %>% \n  merge(farms_geometry, by = \"farm_ID\")\n\nmass_inputs_robinson <- mass_inputs_sep_geometry %>% \n  filter(feed == \"reference\" & measure == \"total\") %>% \n  mutate(mean_wpb = mean_wpb %>% drop_units()) %>% \n  st_sf() %>% \n  st_transform(crs = \"+proj=robin\")\n\nggplot() +\n  geom_sf(data = graticules, color = \"gray80\", size = 0.3) +\n  geom_sf(data = worldmap, fill = \"white\", color = \"dimgray\") +\n  geom_sf(data = mass_inputs_robinson, aes(color = mean_wpb), size = 1) +\n  coord_sf() +\n  scale_color_viridis_c(option = \"turbo\") +\n  guides(col = guide_colourbar(\n    title = expression(\"Mean waste inputs (g g fish\"^-1*\")\"),\n    direction = \"horizontal\", position = \"bottom\",\n    label.position = \"bottom\", title.position = \"top\", \n    title.vjust = 1, title.hjust = 0.5,\n    frame.colour = \"black\", ticks.colour = \"black\",ticks.linewidth = 2,\n    barwidth = 25,barheight = 1.5\n  )) +\n  geom_sf(data = boxes_robinson, fill = NA, color = \"darkred\", size = 1.65) +\n  geom_sf_text(data = labels_robinson, aes(label = letter), \n               color = \"darkred\", size = 5, fontface = \"bold\", \n               hjust = 0.5, vjust = 0.5) +\n  theme_void()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Total waste intputs (uneaten feed + excreted faeces) across the whole production period at each farm location.\n](manuscript_files/figure-html/fig-waste-inputs-total-1.png){#fig-waste-inputs-total fig-align='center' width=912}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nmass_inputs_patch <- mass_inputs_sep_geometry %>% \n  filter(feed == \"reference\" & measure == \"total\") %>% \n  mutate(mean_wpb = mean_wpb %>% drop_units())\n\np1 <- ggplot() +\n  geom_sf(data = worldmap, fill = \"white\", color = \"dimgray\") +\n  geom_sf(data = mass_inputs_patch, aes(color = mean_wpb, geometry = geometry), size = 2) +\n  coord_sf() +\n  scale_color_viridis_c(option = \"turbo\") +\n  guides(col = guide_colourbar(\n    title = expression(\"Mean waste inputs (g g fish\"^-1*\")\"),\n    direction = \"vertical\", position = \"right\",\n    label.position = \"right\", title.position = \"top\", \n    title.vjust = 1, title.hjust = 0.5,\n    frame.colour = \"black\", ticks.colour = \"black\",ticks.linewidth = 1.5,\n    barwidth = 1.5, barheight = 20,\n  )) +\n  prettyplot() +\n  labs(y = \"Latitude\", x = \"Longitude\")\n\np_Can1 <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CAN1\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"CAN1\"]][[\"ylims\"]])  +\n  draw_label(\"A\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CAN1\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"CAN1\"]][[\"laby\"]], \n             hjust = -1, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Can2 <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CAN2\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"CAN2\"]][[\"ylims\"]])  +\n  draw_label(\"B\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CAN2\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"CAN2\"]][[\"laby\"]], \n             hjust = 0.5, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Eur <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"EUR\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"EUR\"]][[\"ylims\"]])  +\n  draw_label(\"C\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"EUR\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"EUR\"]][[\"laby\"]], \n             hjust = -1, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Chi <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CHI\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"CHI\"]][[\"ylims\"]])  +\n  theme(legend.position = \"right\") +\n  draw_label(\"D\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CHI\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"CHI\"]][[\"laby\"]], \n             hjust = 0, vjust = 0)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Aus <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"AUS\"]][[\"xlims\"]], \n           ylim = inset_boxes_sm[[\"AUS\"]][[\"ylims\"]])  +\n  draw_label(\"E\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"AUS\"]][[\"labx\"]], \n             y = inset_boxes_sm[[\"AUS\"]][[\"laby\"]], \n             hjust = 0, vjust = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngrid_1 <- cowplot::plot_grid(p_Can1, p_Can2, ncol = 2, rel_widths =  c(1, 1.35))\ngrid_2 <- cowplot::plot_grid(p_Eur,  p_Aus,  nrow = 2, rel_heights = c(1, 1))\ngrid_3 <- cowplot::plot_grid(grid_2, p_Chi,  ncol = 2, rel_widths =  c(1, 1))\n\ncowplot::plot_grid(\n  grid_1, grid_3,\n  nrow = 2,\n  rel_heights = c(1, 1.5)        # relative row heights\n)\n```\n\n::: {.cell-output-display}\n![Example of a patchwork\n](manuscript_files/figure-html/patchwork-waste-map-mercator-1.png){fig-align='center' width=912}\n:::\n:::\n\n::: {#cell-fig-total-excreted-perday .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nexcreted_total %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  mutate(excr_biom_mean = excr_biom_mean %>% set_units(\"g g_fish-1 d-1\") %>% set_units(\"g kg_fish-1 d-1\"),\n         country = factor(country, levels = sorted_countries)) %>% \n  ggplot(aes(x = country, y = excr_biom_mean, fill = feed)) +\n  geom_boxplot() +\n  prettyplot() +\n  scale_fill_manual(values = feed_pal) +\n  labs(y = \"Excreted faeces\", x = \"Country\")\n```\n:::\n\n::: {#cell-fig-total-excr-diff_perc .cell layout-align=\"center\"}\n::: aside\n\n```{.r .cell-code .hidden}\ndf <- excreted_total %>% \n  select(-contains(c(\"sd\", \"biom\"))) %>% \n  pivot_wider(names_from = \"feed\", values_from = \"excr_mean\") %>% \n  mutate(past = past-reference,\n         future = future-reference) %>% \n  pivot_longer(names_to = \"feed\", values_to = \"diff\", cols = c(past, future), names_transform = list(feed = as.factor)) %>% \n  mutate(reference = set_units(reference, \"g kg_fish-1 d-1\"),\n         diff_perc = drop_units(diff/reference)) %>% \n    merge(farm_coords, by = \"farm_ID\") %>% \n  mutate(prod_day = t - t_start + 1)\n\nsumm <- df %>%\n  group_by(hemisphere, feed) %>% \n  reframe(mean = 100*meanna(diff_perc) %>% round(3),\n          min = 100*meanna(diff_perc) %>% round(3),\n          max = 100*maxna(diff_perc) %>% round(3))\n\ndf %>% \n  ggplot(aes(x = reference, y = diff_perc, colour = hemisphere)) +\n  geom_point() + \n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  facet_grid(~feed) +\n  prettyplot()\n\n# The difference in total excretion for the past feed ranged from \n# `r summ$min[summ$feed == \"past\"]`-`r summ$max[summ$feed == \"past\"]`% across all farms globally, and for the future feed ranged from \n# `r summ$min[summ$feed == \"future\"]`-`r summ$max[summ$feed == \"future\"]`%. \n```\n:::\n:::\n\n::: {#cell-fig-total-excr-diff_perc_2 .cell layout-align=\"center\"}\n::: aside\n\n```{.r .cell-code .hidden}\ndf %>% \n  group_by(prod_day, feed, hemisphere) %>% \n  reframe(diff_perc_mean = meanna(diff_perc),\n          diff_perc_sd = sdna(diff_perc)) %>% \n  ggplot(aes(x = prod_day, y = diff_perc_mean, ymin = diff_perc_mean-diff_perc_sd, ymax = diff_perc_mean+diff_perc_sd, \n             colour = as.factor(hemisphere), fill = as.factor(hemisphere))) +\n  geom_line() + \n  geom_ribbon(alpha = 0.25) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  facet_grid(~feed) +\n  prettyplot()\n```\n:::\n:::\n\n::: {#cell-fig-total-excr-act_diff .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\ndf <- excreted_total %>% \n  select(-contains(c(\"sd\", \"excr_mean\", \"biomass\"))) %>% \n  pivot_wider(names_from = \"feed\", values_from = \"excr_biom_mean\") %>% \n  mutate(past = past-reference,\n         future = future-reference) %>% \n  pivot_longer(names_to = \"feed\", values_to = \"diff\", cols = c(past, future), names_transform = list(feed = as.factor)) %>% \n  mutate(reference = set_units(reference, \"g kg_fish-1 d-1\"),\n         diff = set_units(diff, \"kg t_fish-1 d-1\")) %>% \n  merge(farm_coords, by = \"farm_ID\") %>% \n  mutate(prod_day = t-t_start+1)\n\nsumm <- df %>%\n  group_by(hemisphere, feed) %>% \n  reframe(mean = meanna(diff) %>% round(3),\n          min = meanna(diff) %>% round(3),\n          max = maxna(diff) %>% round(3))\n\ndf %>% \n  group_by(hemisphere, feed, prod_day) %>% \n  reframe(mean_diff = meanna(diff),\n          sd_diff = sdna(diff) %>% set_units(\"kg t_fish-1 d-1\")) %>% \n  ggplot(aes(x = prod_day, y = mean_diff, ymin = mean_diff-sd_diff, ymax = mean_diff+sd_diff, colour = hemisphere, fill = hemisphere)) +\n  geom_line(linewidth = 0.75) +\n  geom_ribbon(alpha = 0.25) +\n  facet_wrap(~feed) +\n  prettyplot()\n```\n:::\n\n\n\n## Total nutrient inputs\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Load and prep macronutrients data (keep in g faeces/feed)\"}\nN_inputs_df <- rbind(\n  farmrun_files %>% \n    purrr::map(function(f) {qs::qread(f)[[\"P_excr_stat\"]]}) %>% \n    bind_rows() %>% \n    mutate(measure = \"excr\"),\n  farmrun_files %>% \n    purrr::map(function(f) {qs::qread(f)[[\"P_uneat_stat\"]]}) %>% \n    bind_rows() %>% \n    mutate(measure = \"uneat\")\n) %>% \n  mutate(measure = as.factor(measure),\n         t = as.integer(t))\n\n# Absolute inputs\nN_inputs_df <- N_inputs_df %>% \n  mutate(mean = mean %>% set_units(\"g\") %>% set_units(\"gN\"),\n         sd = sd %>% set_units(\"g\") %>% set_units(\"gN\"))\n\n# Inputs relative to biomass produced\nN_inputs_rel_df <- N_inputs_df %>% \n  merge(biomass, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  rename(mean = mean.x, \n         sd = sd.x, \n         biomass_mean = mean.y,\n         biomass_sd = sd.y) %>% \n  mutate(biomass_mean = biomass_mean %>% set_units(\"g_fish\"),\n         biomass_sd = biomass_sd %>% set_units(\"g_fish\"),\n         biomass_sd = biomass_sd/biomass_mean,\n         sd = sd/mean,\n         mean = mean/biomass_mean,\n         sd = sqrt(sd^2 + biomass_sd^2) * mean,\n         biomass_sd = biomass_sd * biomass_mean)\n```\n:::\n\n::: {#cell-fig-composition-comparison .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nggplot(ec, aes(x = source, y = 100*value, fill = feed)) +\n  geom_col(colour = \"black\", position = position_dodge(width = 0.9), alpha = 0.75) +\n  facet_grid(cols = vars(macro)) +\n  prettyplot() +\n  scale_fill_manual(values = feed_pal) +\n  scale_y_continuous(breaks = seq(0, 60, 10)) +\n  labs(y = \"Composition (%)\", x = \"Source\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\n# Through time\nN_inputs_ts <- N_inputs_df %>%\n  group_by(feed, t, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g\"),\n          mean = meanna(mean))\n\nN_inputs_rel_ts <- N_inputs_rel_df %>% \n  group_by(feed, t, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g g_fish-1\"),\n          mean = meanna(mean))\n\n# Total (at production end)\nN_inputs_end <- N_inputs_df %>% \n  group_by(feed, measure, farm_ID) %>% \n  reframe(mean = sumna(mean)) %>% \n  group_by(feed, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g\"),\n          mean = meanna(mean))\n\nN_inputs_rel_end <- N_inputs_rel_df %>% \n  group_by(feed, measure, farm_ID) %>% \n  reframe(mean = sumna(mean)) %>% \n  group_by(feed, measure) %>% \n  reframe(min = minna(mean),\n          max = maxna(mean),\n          sd = sdna(mean) %>% set_units(\"g g_fish-1\"),\n          mean = meanna(mean))\n\nN_inputs_rel_end_diff <- N_inputs_rel_df %>% \n  group_by(feed, measure, farm_ID) %>% \n  reframe(mean = sumna(mean)) %>% \n  pivot_wider(names_from = feed, values_from = mean) %>% \n  mutate(future = (future-reference)/reference,\n         past = (past-reference)/reference) %>% \n  select(-reference) %>% \n  pivot_longer(cols = c(past, future), names_to = \"feed\", values_to = \"diff\") %>% \n  mutate(feed = factor(feed, levels = c(\"past\", \"future\"))) %>% \n  group_by(feed, measure) %>% \n  reframe(min = minna(diff),\n          max = maxna(diff),\n          sd = sdna(diff),\n          mean = meanna(diff))\n\n# Pull key values (uneaten feed)\nu_stmin1 <- filter(N_inputs_rel_end, feed == \"reference\", measure == \"uneat\") %>% pull(min)\nu_stmax1 <- filter(N_inputs_rel_end, feed == \"reference\", measure == \"uneat\") %>% pull(max)\nu_stmean1 <- filter(N_inputs_rel_end, feed == \"reference\", measure == \"uneat\") %>% pull(mean)\nu_stmin2 <- filter(N_inputs_rel_end_diff, feed == \"past\", measure == \"uneat\") %>% pull(min)\nu_stmax2 <- filter(N_inputs_rel_end_diff, feed == \"past\", measure == \"uneat\") %>% pull(max)\nu_stmean2 <- filter(N_inputs_rel_end_diff, feed == \"past\", measure == \"uneat\") %>% pull(mean)\nu_stmin3 <- filter(N_inputs_rel_end_diff, feed == \"future\", measure == \"uneat\") %>% pull(min)\nu_stmax3 <- filter(N_inputs_rel_end_diff, feed == \"future\", measure == \"uneat\") %>% pull(max)\nu_stmean3 <- filter(N_inputs_rel_end_diff, feed == \"future\", measure == \"uneat\") %>% pull(mean)\n\n# Convert past and future values to % change values\nu_stmin2 <- (100*u_stmin2) %>% round(2)\nu_stmax2 <- (100*u_stmax2) %>% round(2)\nu_stmean2 <- (100*u_stmean2) %>% round(2)\nu_stmin3 <- (100*u_stmin3) %>% round(2)\nu_stmax3 <- (100*u_stmax3) %>% round(2)\nu_stmean3 <- (100*u_stmean3) %>% round(2)\n\nu_stmin1 <- u_stmin1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\nu_stmax1 <- u_stmax1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\nu_stmean1 <- u_stmean1 %>% set_units(\"g kg_fish-1\") %>% drop_units() %>% round(2)\n```\n:::\n\n\n\n# Supplementary materials\n\n## Parameter sensitivity {#sec-parameter-sensitivity}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nsens_weight <- output_sens_data_path %>% \n  list.files(full.names = T) %>% \n  str_subset(\"results\") %>% \n  str_subset(\"weight\") %>% \n  qs::qread()\n\nsens_excr <- output_sens_data_path %>% \n  list.files(full.names = T) %>% \n  str_subset(\"results\") %>% \n  str_subset(\"total_excr\") %>% \n  qs::qread() \n\nsens_data <- rbind(sens_weight, sens_excr)\n```\n:::\n\n\n\nThe most sensitive parameter by far in @fig-param-sens-weight is $m$ (the weight exponent for anabolism), followed closely by $n$ the (weight exponent for catabolism). \nThese two are also relatively uncertain, as $m$ was taken from *Salmo trutta* measurements in a fairly old paper [@broekhuizen_modelling_1994] and $n$ was taken from @baldan_r_2018 which did not specifically look at Atlantic salmon.\n\n\n\n::: {#cell-fig-param-sens-weight .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nsens_data <- sens_data %>% \n  filter(measure %in% c(\"total_excr\", \"total_uneat\")) \n\nsens_data %>% \n  ggplot(aes(x = adj_param, y = mean_sens, ymin = mean_sens - sd_sens, ymax = mean_sens + sd_sens, fill = measure)) +\n  geom_col(position = position_dodge(), width = 0.95, colour = \"black\", alpha = 0.75) +\n  # geom_errorbar(position = position_dodge(width = 0.95), width = 0.3) +\n  geom_hline(aes(yintercept = 0), linetype = \"dashed\") +\n  scale_y_continuous(breaks = seq(-30,30,5), limits = c(-10,30)) +\n  # scale_x_discrete(limits = rev(param_names$name), labels = rev(param_names$lab)) +\n  # scale_fill_manual(values = c(total_excr = \"salmon\", total_uneat = \"steelblue\")) +\n  labs(x = \"Adjusted parameter\", y = \"Sensitivity\") +\n  prettyplot() +\n  theme(strip.text = element_blank(), \n        aspect.ratio = 0.8,\n        axis.title.y = element_blank()) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![Impact of increasing each model parameter by 10% on final farm biomass (red) and total excreted nutrients (blue) over the whole production period.](manuscript_files/figure-html/fig-param-sens-weight-1.png){#fig-param-sens-weight fig-align='center' width=816}\n:::\n:::\n\n\n\n# References\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}