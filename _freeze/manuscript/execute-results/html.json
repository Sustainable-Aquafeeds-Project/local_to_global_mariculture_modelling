{
  "hash": "30374c4dae3cf312b6921dfc5de8023f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Local to global N input modelling\"\n# Author roles: \"writing – original draft\", \"writing – review & editing\", \"formal analysis\", \"funding acquisition\", \"conceptualization\", \"data curation\", \"investigation\", \"methodology\", \"project administration\", \"resources\", \"software\", \"supervision\", \"validation\", \"visualization\"\n\nbibliography: [\"refs.bib\", \"manual-refs.bib\"]\n\nformat: \n  html:\n    theme: simplex\n    css: [\"extra.css\"]\n    code-fold: true\n    code-overflow: wrap\n    toc: true\n    toc-expand: true\n    toc-location: left\n    lang: en-GB\n    grid:\n      sidebar-width: 250px\n      body-width: 1200px\n      margin-width: 250px\n      gutter-width: 2em\n  \nexecute:\n  eval: true\n  echo: false\n  warning: false\n  message: false\n  cache: true\n  freeze: auto\n  \nknitr: \n  opts_chunk:\n    fig.align: center\n    fig.width: 8.5\n\neditor: source\n---\n\n::: {.cell .hidden layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nlibrary(magrittr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'tidyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    extract\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(stringr)\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggplot2' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggh4x)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggh4x' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at C:/Users/treimer/Documents/R-temp-files/local_to_global_mariculture_modelling\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggpubr)\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'cowplot'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:ggpubr':\n\n    get_legend\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'patchwork'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:cowplot':\n\n    align_plots\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(qs)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'qs' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nqs 0.27.3. Announcement: https://github.com/qsbase/qs/issues/103\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'arrow'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    is_in\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(targets)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nterra 1.8.50\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'terra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:arrow':\n\n    buffer\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:patchwork':\n\n    area\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:ggpubr':\n\n    rotate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:magrittr':\n\n    extract, inset\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'rnaturalearthdata'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearthhires)\nlibrary(dtplyr)\nlibrary(furrr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: future\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(RColorBrewer)\nlibrary(purrr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'purrr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    set_names\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(future)\nlibrary(readxl)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'readxl' was built under R version 4.4.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(units)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'units' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nudunits database from C:/Users/treimer/AppData/Local/R/cache/R/renv/cache/v5/windows/R-4.4/x86_64-w64-mingw32/units/0.8-7/5d0b024902d5da97a2b64f002e92a869/units/share/udunits/udunits2.xml\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(conflicted)\nlibrary(lubridate)\nlibrary(RColorBrewer)\nconflicts_prefer(dplyr::select(), dplyr::filter(), dplyr::intersect(), .quiet = T)\n# This markdown uses TinyTex - install with tinytex::install_tinytex()\n\nremove_unit(\"g_fish\")\nremove_unit(\"kg_fish\")\nremove_unit(\"t_fish\")\ninstall_unit(\"g_fish\")\ninstall_unit(\"kg_fish\", \"1000 g_fish\")\ninstall_unit(\"t_fish\", \"1000 kg_fish\")\n```\n:::\n\n::: {.cell .hidden layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nsource(here(\"00_model_functions.R\"))\n\n# Input paths\ninput_farm_coords_path <- here() %>% file.path(\"data\", \"_general_data\", \"farm_locations\")\ninput_farm_sst_path <- here() %>% file.path(\"data\", \"_general_data\", \"SST\")\ninput_species_param_path <- here() %>% file.path(\"data\", \"atlantic_salmon\", \"params\")\ninput_feed_profile_path <- here() %>% file.path(\"data\", \"_general_data\", \"diets\")\n\n# Output paths\noutput_farm_data_path <- here() %>% file.path(\"outputs\", \"farm_data\")\noutput_species_data_path <- here() %>% file.path(\"outputs\", \"species_data\")\noutput_sens_data_path <- here() %>% file.path(\"outputs\", \"sensitivity_data\")\noutput_farm_growth_data_path <- here() %>% file.path(\"outputs\", \"farm_growth_data\")\noutput_cohort_growth_data_path <- here() %>% file.path(\"outputs\", \"cohort_growth_data\")\ndata_analysis_path <- here() %>% file.path(\"outputs\", \"data_analysis\")\n\n# Filenames\nfarm_coords_file <- file.path(output_farm_data_path, \"farm_coords.qs\")\nspecies_params_file <- file.path(output_species_data_path, \"species_params.qs\")\npop_params_file <- file.path(output_species_data_path, \"pop_params.qs\")\nfeed_params_file <- file.path(output_species_data_path, \"feed_params.qs\")\nsens_params_file <- file.path(output_species_data_path, \"sens_params.qs\")\nsens_results_files <- file.path(output_sens_data_path) %>% str_subset(\"results\")\n\nspecies_params <- qread(species_params_file)\npop_params <- qread(pop_params_file)\n\nprettyplot <- function() {\n  theme_classic() +\n    theme(legend.position = \"none\",\n          text = element_text(family = \"serif\", size = 12, colour = \"black\"),\n          axis.title.x = element_text(vjust = 0.5),\n          axis.title.y = element_text(hjust = 0.5))\n}\n  \nfeed_pal <- c(\"past\" = brewer.pal(9, \"Set1\")[1], \"reference\" = brewer.pal(9, \"Set1\")[2], \"future\" = brewer.pal(9, \"Set1\")[3])\ncohort_pal <- c(\"1\" = brewer.pal(9, \"Set1\")[1], \"2\" = brewer.pal(9, \"Set1\")[2], \"3\" = brewer.pal(9, \"Set1\")[3], \"all\" = \"black\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Function to create sf polygons from bounding boxes\"}\ncreate_boxes <- function(box_list, label_positions, offset_deg) {\n  boxes <- list()\n  labels <- list()\n  \n  for(i in seq_along(box_list)) {\n    name <- names(box_list)[i]\n    coords <- box_list[[i]]\n    pos <- label_positions[i]\n    \n    # Create polygon from bounding box coordinates\n    box_coords <- matrix(c(\n      coords[1], coords[3],  # lonmin, latmin\n      coords[2], coords[3],  # lonmax, latmin  \n      coords[2], coords[4],  # lonmax, latmax\n      coords[1], coords[4],  # lonmin, latmax\n      coords[1], coords[3]   # close polygon\n    ), ncol = 2, byrow = TRUE)\n    \n    # Create sf polygon\n    poly <- st_polygon(list(box_coords))\n    boxes[[i]] <- st_sfc(poly, crs = 4326)\n    \n    # Calculate label position based on specification\n    label_coords <- get_label_position(coords, pos, offset_deg[i])\n    label_point <- st_point(c(label_coords[1], label_coords[2]))\n    labels[[i]] <- st_sfc(label_point, crs = 4326)\n  }\n  \n  # Combine into sf objects\n  boxes_sf <- st_sf(\n    name = names(box_list),\n    letter = LETTERS[1:length(box_list)],\n    geometry = do.call(c, boxes)\n  )\n  \n  labels_sf <- st_sf(\n    name = names(box_list), \n    letter = LETTERS[1:length(box_list)],\n    geometry = do.call(c, labels)\n  )\n  \n  return(list(boxes = boxes_sf, labels = labels_sf))\n}\n\n# Helper function to calculate label positions\nget_label_position <- function(coords, position, offset) {\n  lonmin <- coords[1]\n  lonmax <- coords[2]\n  latmin <- coords[3]\n  latmax <- coords[4]\n  \n  # Parse position string\n  parts <- strsplit(position, \"_\")[[1]]\n  vertical <- parts[1]    # \"top\" or \"bottom\"\n  horizontal <- parts[2]  # \"left\" or \"right\"\n  location <- parts[3]    # \"inside\" or \"outside\"\n  \n  # Base coordinates for corners\n  if(vertical == \"bottom\") {base_lat <- latmin} else {base_lat <- latmax}\n  if(horizontal == \"right\") {base_lon <- lonmax} else {base_lon <- lonmin}\n\n  # Apply offset for outside positioning\n  if(location == \"outside\") {\n    if(horizontal == \"left\") {base_lon <- base_lon-offset} else {base_lon <- base_lon+offset}\n    if(vertical == \"top\") {base_lat <- base_lat + offset} else {base_lat <- base_lat - offset}\n  }\n  \n  return(c(base_lon, base_lat))\n}\n\nlim_robin <- function(lons = c(144.0, 149.5), lats = c(-39.75, -44.00)) {\n  coords <- data.frame(lon = lons, lat = lats) %>%\n    st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n    st_transform(crs = \"+proj=robin\") %>% \n    st_coordinates()\n  list(\n    xlims = range(coords[, \"X\"]),\n    ylims = range(coords[, \"Y\"])\n  )\n}\n```\n:::\n\n\n\nThis document was last updated at 20:00 on 06 Jun, 2025.\n\n# Methods\n### Feeding rate\n\nTo detail here:\n\n* Functional response to temperature (species-specific)\n* Overfeeding parameters and how they come into play\n* Deminstration of how feeding response and actual food given vary with temperature?\n\n\n\n::: {#cell-fig-functional-response-to-temperature .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\ndf <- data.frame(water_temp = seq(-5, 26, 0.25))\ndf$feeding <- sapply(FUN = feeding_rate, X = df$water_temp, species_params = species_params)\ndf <- df %>% \nmutate(ing_pot = pop_params['meanImax'] * (pop_params['meanW']^species_params['m']) * feeding,\n       food_prov = NA)\nfor (i in 1:nrow(df)) {\n  df$food_prov[i] <- food_prov_rate(pop_params = pop_params, rel_feeding = df$feeding[i], ing_pot = df$ing_pot[i], \n                                    ing_pot_10 = pop_params['meanImax'] * (pop_params['meanW']^species_params['m']) * 0.1)\n}\ndf$ing_pot <- df$ing_pot/maxna(df$ing_pot)\ndf$food_prov <- df$food_prov/maxna(df$ing_pot)\n\ndf %>% \n  ggplot(aes(x = water_temp, y = ing_pot)) +\n  geom_line(linewidth = 0.75) +\n  geom_line(aes(y = food_prov), linewidth = 0.75, linetype = \"dotted\") +\n  scale_y_continuous(breaks = seq(0,1.5,0.25)) +\n  scale_x_continuous(breaks = seq(-5,30,5), limits = c(-5,26)) +\n  labs(x = expression(\"Water temperature (\"*degree*\"C)\"), y = \"Relative food ingested/provided\") +\n  prettyplot() +\n  theme(text = element_text(colour = \"black\", family = \"serif\", size = 12))\n```\n:::\n\n\n\n## Farm temperature forcings\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Get general farm info\"}\nfarms_to_omit <- file.path(input_farm_coords_path, \"atlantic_salmon_farms_to_omit.qs\") %>% qs::qread()\nfarm_ts_data <- file.path(output_farm_data_path, \"farm_ts_data.qs\") %>% qs::qread()\nfarm_coords <- file.path(output_farm_data_path, \"farm_coords.qs\") %>% qs::qread() %>% \n    mutate(hemisphere = case_when(lat < 0 ~ \"S\", T ~ \"N\") %>% as.factor()) \n\nfarms_geometry <- file.path(output_farm_data_path, \"farm_geometry.qs\") %>% qs::qread() %>% \n  rename(farm_ID = farm_id)\n\nsorted_countries <- farm_coords %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  group_by(country) %>% \n  reframe(av_lat = mean(lat)) %>% \n  arrange(-av_lat) %>% \n  pull(country) %>% \n  unique()\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Get the farm temperature forcings\"}\nfarm_temp_means <- farm_ts_data %>% \n  group_by(farm_ID) %>% \n  reframe(mean_temp = mean(temp_c)) %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  merge(farm_coords, by = \"farm_ID\") %>% \n  dplyr::filter(!farm_ID %in% farms_to_omit)\n\noverall_mean <- mean(farm_temp_means$mean_temp)\noverall_sd <- sd(farm_temp_means$mean_temp)\n\nrm(farm_ts_data)\n```\n:::\n\n\n\nMean daily temperatures at the farms globally ranged from  from 6$^{\\circ}$C to 16.7$^{\\circ}$C, with an overall mean of 10.1$^{\\circ}$C ($\\pm$ 1.8$^{\\circ}$C SD).\nFarms with a mean temperature of $\\leq$6$^\\circ$C were excluded (4 farms). The total number of farms included in the analysis was therefore 2717. \n\n\n\n::: {#cell-fig-farm-mean-temps .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nworldmap <- ne_countries(scale = \"medium\", returnclass = \"sf\") %>% st_transform(crs = \"+proj=robin\")\ngraticules <- st_graticule(worldmap, lon = seq(-180, 180, 30), lat = seq(-90, 90, 30)) \n\ninset_boxes <- list(   # lonmin, lonmax, latmin, latmax\n  CAN1 = c(-132, -122, 47.75, 54.25),\n  CAN2 = c(-70, -54, 43, 48.5),\n  EUR = c(-26, 30, 51, 71),\n  CHI = c(-77.5, -62.5, -56, -25),\n  AUS = c(144, 149.5, -39.75, -44)\n)\nlabels_spec <- c(CAN1 = \"bottom_left_outside\", CAN2 = \"bottom_right_outside\", EUR = \"bottom_left_outside\", CHI = \"top_left_outside\", AUS = \"bottom_left_outside\")\nlabels_offset <- c(CAN1 = 1, CAN2 = 2, EUR = 1.75, CHI = 1.75, AUS = 3.5)\n\nbox_data <- create_boxes(box_list = inset_boxes, # see function create_boxes above\n                         label_positions = unname(labels_spec),\n                         offset_deg = unname(labels_offset))\nboxes_robinson <- st_transform(box_data$boxes, crs = \"+proj=robin\")\nlabels_robinson <- st_transform(box_data$labels, crs = \"+proj=robin\")\nfarm_temp_robinson <- st_sf(farm_temp_means) %>% st_transform(crs = \"+proj=robin\")\n\np1 <- ggplot() +\n  geom_sf(data = graticules, color = \"gray80\", size = 0.3) +\n  geom_sf(data = worldmap, fill = \"white\", color = \"dimgray\") +\n  geom_sf(data = farm_temp_robinson, aes(color = mean_temp), size = 1) +\n  coord_sf() +\n  scale_color_viridis_c(option = \"turbo\") +\n  guides(col = guide_colourbar(\n    title = \"Mean temperature (°C)\",\n    direction = \"horizontal\", position = \"bottom\",\n    label.position = \"bottom\", title.position = \"top\", \n    title.vjust = 1, title.hjust = 0.5,\n    frame.colour = \"black\", ticks.colour = \"black\",ticks.linewidth = 2,\n    barwidth = 25,barheight = 1.5\n  )) +\n  geom_sf(data = boxes_robinson, fill = NA, color = \"darkred\", size = 1.65) +\n  geom_sf_text(data = labels_robinson, aes(label = letter), \n               color = \"darkred\", size = 5, fontface = \"bold\", \n               hjust = 0.5, vjust = 0.5) +\n  theme_void()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np2 <- farm_temp_means %>% \n  ggplot(aes(y = mean_temp, x = abs(lat), colour = country)) +\n  geom_point(size = 2) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(x = expression(\"Absolute latitude (\"*degree*\")\"), y = expression(\"Mean temperature (\"*degree*\"C)\")) +\n  prettyplot() +\n  theme(legend.position = \"top\", legend.title = element_blank())\n\np3 <- farm_temp_means %>% \n  mutate(hemisphere = case_when(lat < 0 ~ \"S\", T ~ \"N\")) %>% \n  ggplot(aes(x = mean_temp, fill = hemisphere)) +\n  geom_histogram(position = \"identity\", colour = \"black\", alpha = 0.5, binwidth = 0.5) +\n  labs(x = expression(\"Mean temperature (\"*degree*\"C)\"), y = \"Frequency\") +\n  prettyplot() +\n  theme(legend.position = \"top\", legend.title = element_blank())\n\n(p2 + p3) / p1 + plot_layout(heights = c(1, 1.5))\n```\n\n::: {.cell-output-display}\n![Potential options for showing farm site mean temperatures. Top left: Mean temperature by latitude across countries. Top right: Frequency distribution of mean temperatures by hemisphere. Bottom: global distribution of mean temperatures.\n](manuscript_files/figure-html/fig-farm-mean-temps-1.png){#fig-farm-mean-temps fig-align='center' width=912}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nno_margins <- function() {\n  theme(legend.position = \"none\", \n        plot.margin = margin(0, 0, 0, 0),\n        axis.title = element_blank())\n}\n\ninset_boxes_sm <- list(   # lonmin, lonmax, latmin, latmax\n  CAN1 = c(-132, -122, 48.5, 54),\n  CAN2 = c(-70, -54, 43, 48.5),\n  EUR = c(-23, 28.5, 52, 71),\n  CHI = c(-78, -62, -55.5, -27),\n  AUS = c(144, 149, -40.75, -43.75)\n)\n\nworldmap <- ne_countries(scale = \"large\", returnclass = \"sf\")\np1 <- ggplot() +\n  geom_sf(data = worldmap, fill = \"white\", color = \"dimgray\") +\n  geom_sf(data = farm_temp_means, aes(color = mean_temp, geometry = geometry), size = 1) +\n  coord_sf() +\n  scale_color_viridis_c(option = \"turbo\") +\n  guides(col = guide_colourbar(\n    title = \"Mean temperature (°C)\",\n    direction = \"vertical\", position = \"right\",\n    label.position = \"right\", title.position = \"top\", \n    title.vjust = 1, title.hjust = 0.5,\n    frame.colour = \"black\", ticks.colour = \"black\",ticks.linewidth = 2,\n    barwidth = 1.5, barheight = 20\n  )) +\n  prettyplot() +\n  labs(y = \"Latitude\", x = \"Longitude\")\n\np_Aus <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"AUS\"]][1:2], ylim = inset_boxes_sm[[\"AUS\"]][3:4])  +\n  draw_label(\"E\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"AUS\"]][1], y = inset_boxes_sm[[\"AUS\"]][3], \n             hjust = 0, vjust = 1)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Eur <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"EUR\"]][1:2], ylim = inset_boxes_sm[[\"EUR\"]][3:4]) +\n  draw_label(\"C\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"EUR\"]][1], y = inset_boxes_sm[[\"EUR\"]][4], \n             hjust = -1, vjust = 1)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Chi <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CHI\"]][1:2], ylim = inset_boxes_sm[[\"CHI\"]][3:4]) +\n  theme(legend.position = \"right\") +\n  draw_label(\"D\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CHI\"]][1], y = inset_boxes_sm[[\"CHI\"]][4], \n             hjust = 0, vjust = 0)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Can1 <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CAN1\"]][1:2], ylim = inset_boxes_sm[[\"CAN1\"]][3:4]) +\n  draw_label(\"A\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CAN1\"]][1], y = inset_boxes_sm[[\"CAN1\"]][4], \n             hjust = -1, vjust = 0)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\np_Can2 <- p1 + \n  coord_sf(xlim = inset_boxes_sm[[\"CAN2\"]][1:2], ylim = inset_boxes_sm[[\"CAN2\"]][3:4]) +\n  draw_label(\"B\", size = 14, fontface = \"bold\", \n             x = inset_boxes_sm[[\"CAN2\"]][1], y = inset_boxes_sm[[\"CAN2\"]][4], \n             hjust = 0, vjust = 1)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngrid_1 <- cowplot::plot_grid(p_Can1, p_Can2, ncol = 2, rel_widths =  c(1, 1.35))\ngrid_2 <- cowplot::plot_grid(p_Eur,  p_Aus,  nrow = 2, rel_heights = c(1, 1))\ngrid_3 <- cowplot::plot_grid(grid_2, p_Chi,  ncol = 2, rel_widths =  c(1, 1))\n\ncowplot::plot_grid(\n  grid_1, grid_3,\n  nrow = 2,\n  rel_heights = c(1, 1.5)        # relative row heights\n)\n```\n\n::: {.cell-output-display}\n![Possibly use a patchwork map to show spatial results?\n](manuscript_files/figure-html/patchwork-map-mercator-1.png){fig-align='center' width=912}\n:::\n:::\n\n\n\n## Production parameters\n\nSalmon were grown for 548 days and were initialised Spring. This was on day 274 for farms in the southern hemisphere and day 121 for farms in the northern hemisphere. Cohorts were initialised anually, such that there was an overlap of 183 days where one cohort was nearing harvest and another was being initialised.\n\n## Model parameterisation\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Get parameter and sensitivity data\"}\nparams <- file.path(output_species_data_path, \"sens_params.qs\") %>% qs::qread()\n\nparam_names <- tibble::tribble(\n  ~name,        ~lab,\n  \"alpha\",      bquote(alpha),\n  \"epsprot\",    bquote(epsilon[\"P\"]),\n  \"epslip\",     bquote(epsilon[\"L\"]),\n  \"epscarb\",    bquote(epsilon[\"C\"]),\n  \"epsO2\",      bquote(epsilon[\"O\"[2]]),\n  \"pk\",         bquote(\"pk\"),\n  \"k0\",         bquote(\"k\"[0]),\n  \"m\",          bquote(\"m\"),\n  \"n\",          bquote(\"n\"),\n  \"betac\",      bquote(beta*\"C\"),\n  \"Tma\",        bquote(\"T\"[\"max\"]),\n  \"Toa\",        bquote(\"T\"[\"opt\"]),\n  \"Taa\",        bquote(\"T\"[\"min\"]),\n  \"omega\",      bquote(omega),\n  \"a\",          bquote(\"a\"),\n  \"k\",          bquote(\"k\"),\n  \"eff\",        bquote(\"eff\"),\n  \"meanW\",      bquote(bar(\"W\")),\n  \"deltaW\",     bquote(Delta*\"W\"), \n  \"meanImax\",   bquote(bar(\"I\"[\"max\"])),\n  \"deltaImax\",  bquote(Delta*\"I\"[\"max\"]),\n  \"overFmean\",  bquote(bar(\"F\")),\n  \"overFdelta\", bquote(Delta*\"F\"),\n  \"mortmyt\",    bquote(\"mort\")\n)\n```\n:::\n\n\n\n@tbl-params shows the parameter values used to model the growth of farmed Atlantic salmon.\n\n| Parameter | Value | Units | Description | Reference | \n|:-------:|:----:|:----:|:----------------|:-------------------------|\n| $\\alpha$             | 0.04      | -                        | Feeding catabolism coefficient | *Salvelinus alpinus*, *Oncorhynchus mykiss* (temps: 8–13$^{\\circ}$C) [@broekhuizen_modelling_1994] | \n| $\\epsilon_{P}$       | 2.36\\times 10^{4}    | J g$^{-1}$               | Energy content of protein      | @baldan_r_2018 | \n| $\\epsilon_{L}$       | 3.62\\times 10^{4}     | J g$^{-1}$               | Energy content of lipid        | @baldan_r_2018 |\n| $\\epsilon_{C}$       | 1.72\\times 10^{4}    | J g$^{-1}$               | Energy content of carbohydrate | @baldan_r_2018 |\n| $\\epsilon_{O_2}$     | 1.34\\times 10^{4}      | J g O$_2^{-1}$           | Energy consumed by the respiration of 1 g of oxygen | @elliott_energy_1975 |\n| pk                   | 0.05         | d$^{-1}$                 | Temperature coefficient for the fasting catabolism | @macnaughton_using_2019 |\n| $k_0$                | 0.003         | -                        | Fasting catabolism at 0 $^{^\\circ}$C | @macnaughton_using_2019 |\n| m                    | 0.75          | -                        | Weight exponent for anabolism | Experimentally-derived alue over a range of *Oncorhynchus*, *Perca* and *Salmo* species (temps: 8–13$^{\\circ}$C) [@broekhuizen_modelling_1994] | \n| n                    | 1          | -                        | Weight exponent for catabolism | @baldan_r_2018 |\n| $\\beta C$            | 0.3234      | -                        | Shape coefficient for the feeding function | Fish size range: 2.25 $\\pm$ 0.49 – 11.5 $\\pm$ 5.29 g, temperature ranges: 5–24$\\^{\\circ}$C. Coefficient for mean daily energy intake of the moderately fast growing group, 0.4398 (mean fast group), 0.2214 (mean slow group) [@jonsson_thermal_2001] | \n| $T_{max}$            | 26        | $^{\\circ}$C              | Maximum lethal temperature | Juvenile *Oncorhynchus tshawytscha* (19.8 $\\pm$ 0.02 g, acclimation temp: 15$^{^\\circ}$C, 19${\\circ}$C) [@poletto_unusual_2017] |\n| $T_{opt}$            | 16        | $^{\\circ}$C              | Optimal temperature | Fish size range: 2.25 $\\pm$ 0.49 – 11.5 $\\pm$ 5.29 g, temperature ranges: 5–24$^{^\\circ}$C [@jonsson_thermal_2001]. Alt value: 14°C [@handeland_effect_2008], *Salmo salar* initial size: 77.0 $\\pm$ 14.6 g, temps: 6, 10, 14, 18${\\circ}$C | \n| $T_{min}$            | 2        | $^{\\circ}$C              | Lowest feeding temperature | Fish essentially stop feeding when below 2$^{\\circ}$C [@vadboncoeur_lowering_2023] | \n| $\\omega$             | 0.6542      | g O$_2$ g$^{-1}$         | Oxygen consumption:weight loss ratio | Calibrated value from @baldan_r_2018 | \n| a                    | 2669          | J g tissue$^{-1}$        | Energy content of fish tissue | Alt value: 17.02350 (nls model fitted to female Atlantic salmon data extracted and transformed from @jonsson_energy_2003 [@van_tien_development_2016] |\n| k                    | 0.1715          | -                        | Weight exponent for energy content | Alt value: 1.65175 (nls model fitted to female Atlantic salmon data extracted and transformed from @jonsson_energy_2003 [@van_tien_development_2016] |\n| eff                  | 0.97        | -                        | Food ingestion efficiency | Range: 95-97% ingestion efficiency [@uglem_does_2020] | \n| $\\overline{W}$       | 125      | g                        | Dry weight mean | Range of 100-150 given so used a mean of 125 and sd of 10 which over 1000 draws from a normal distribution delivers a minimum and maximum close to these numbers [@dempsey_estimating_2023] | \n| $\\Delta{W}$          | 10     | g                        | Dry weight standard deviation | Range of 100-150 given so used a mean of 125 and sd of 10 which over 1000 draws from a normal distribution delivers a minimum and maximum close to these numbers [@dempsey_estimating_2023] | \n| $\\overline{I_{max}}$ | 0.035   | g g$^{-1}$ fish d$^{-1}$ | Ingestion rate mean | [FAO](https://www.fao.org/fileadmin/user_upload/affris/docs/tabl10.pdf) |\n| $\\Delta{I_{max}}$    | 0.005  | g g$^{-1}$ fish d$^{-1}$ | Ingestion rate standard deviation | [FAO](https://www.fao.org/fileadmin/user_upload/affris/docs/tabl10.pdf) |\n| $\\overline{F}$       | 0.015  | g g$^{-1}$ fish          | Overfeeding rate mean |    |\n| $\\Delta{F}$          | 0.0045 | g g$^{-1}$ fish          | Overfeeding rate standard deviation |    |\n| mort                 | 5.99798\\times 10^{-4}    | d$^{-1}$                 | Natural mortality rate | @tvete_towards_2023 |\n: Model growth parameters for Atlantic salmon {#tbl-params}\n\n### Parameter sensitivity\n\nParameter sensitivity was tested by varying each parameter in @tbl-params by $\\pm 10$% and calculating sensitivity as $S_p = \\frac{(P_{1.1} - P_{0.9})}{0.2 \\times P_1}$, where $S$ is the sensitivity of the measured variable to changes in parameter $p$, and $P_{1.1}$, $P_{0.9}$, and $P_{1}$ are the value of the measured variable when the model is run with parameter $p$ at 110%, 90%, and 100% of its value respectively. \nAll parameters in Table @tbl-params were tested. The population-level parameters ($\\overline{W}$, $\\Delta{W}$, $\\overline{I_{max}}$, $\\Delta{I_{max}}$, $\\overline{F}$, $\\Delta{F}$) were tested with a population of of 5000 on a random 10% of farms, while all other parameters were tested across all farms with a population of 10.\n \n## Modelled experimental feeds {#sec-feeds}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nfeed_params <- file.path(output_species_data_path, \"feed_params.qs\") %>% qs::qread()\n\ndf <- feed_params[[\"reference\"]]\ncontribP_1 <- df[[\"Proteins\"]]$proportion*df[[\"Proteins\"]]$macro\ntP_1 <- sum(contribP_1)\ndigestP_1 <- sum(df[[\"Proteins\"]]$digest * contribP_1)/tP_1\n\ncontribL_1 <- df[[\"Lipids\"]]$proportion*df[[\"Lipids\"]]$macro\ntL_1 <- sum(contribL_1)\ndigestL_1 <- sum(df[[\"Lipids\"]]$digest * contribL_1)/tL_1\n\ncontribC_1 <- df[[\"Carbohydrates\"]]$proportion*df[[\"Carbohydrates\"]]$macro\ntC_1 <- sum(contribC_1)\ndigestC_1 <- sum(df[[\"Carbohydrates\"]]$digest * contribC_1)/tC_1\n\ndf <- feed_params[[\"past\"]]\ncontribP_2 <- df[[\"Proteins\"]]$proportion*df[[\"Proteins\"]]$macro\ntP_2 <- sum(contribP_2)\ndigestP_2 <- sum(df[[\"Proteins\"]]$digest * contribP_2)/tP_2\n\ncontribL_2 <- df[[\"Lipids\"]]$proportion*df[[\"Lipids\"]]$macro\ntL_2 <- sum(contribL_2)\ndigestL_2 <- sum(df[[\"Lipids\"]]$digest * contribL_2)/tL_2\n\ncontribC_2 <- df[[\"Carbohydrates\"]]$proportion*df[[\"Carbohydrates\"]]$macro\ntC_2 <- sum(contribC_2)\ndigestC_2 <- sum(df[[\"Carbohydrates\"]]$digest * contribC_2)/tC_2\n\ndf <- feed_params[[\"future\"]]\ncontribP_3 <- df[[\"Proteins\"]]$proportion*df[[\"Proteins\"]]$macro\ntP_3 <- sum(contribP_3)\ndigestP_3 <- sum(df[[\"Proteins\"]]$digest * contribP_3)/tP_3\n\ncontribL_3 <- df[[\"Lipids\"]]$proportion*df[[\"Lipids\"]]$macro\ntL_3 <- sum(contribL_3)\ndigestL_3 <- sum(df[[\"Lipids\"]]$digest * contribL_3)/tL_3\n\ncontribC_3 <- df[[\"Carbohydrates\"]]$proportion*df[[\"Carbohydrates\"]]$macro\ntC_3 <- sum(contribC_3)\ndigestC_3 <- sum(df[[\"Carbohydrates\"]]$digest * contribC_3)/tC_3\n```\n:::\n\n\n\n[Possibly replace this with a better summary of the ingredients that make up each feed, and report these stats in Results under Uneaten feed?]{.aside}\n\n* Feeds came from [@cottrell_origins_nodate; @cottrell_global_2020].\n* The reference feed is 37.8% protein, 36.5% lipid, 20.4% carbohydrate. \n* The past feed is 49.8% protein, 27.1% lipid, 16.6% carbohydrate. \n* The future feed is 47.7% protein, 32.9% lipid, 13.9% carbohydrate. \n* Within the reference feed, protein is overall 89.2% digestible, lipid is overall 96% digestible, and carbohydrate is overall 69.6% digestible.\n* Within the past feed, protein is overall 90.5% digestible, lipid is overall 96% digestible, and carbohydrate is overall 79.7% digestible.\n* Within the future feed, protein is overall 86.2% digestible, lipid is overall 96% digestible, and carbohydrate is overall 69.3% digestible.\n\n## Model population and biomass\n\n\n\n::: {#cell-fig-cohorts .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nfnms <- output_farm_growth_data_path %>% \n  list.files(full.names = T) %>% \n  str_subset(\"reference\")\n\ndf <- qs::qread(fnms[1])[[\"biomass_stat\"]] %>% \n  as.data.frame() %>% \n  mutate(mean = set_units(mean, \"g\") %>% set_units(\"t\"),\n         sd = set_units(sd, \"g\") %>% set_units(\"t\")) %>% \n  select(-farm_ID)\n\ndf <- rbind(\n  df %>% mutate(cohort = 1),\n  df %>% mutate(t = t+365, cohort = 2),\n  df %>% mutate(t = t+730, cohort = 3)\n) %>% \n  mutate(t = (t-min(t))+1,\n         split = \"Split by cohort\")\n\nmin_t <- min(df$t[df$cohort == 2])\nmax_t <- max(df$t[df$cohort == 2])\n\ndf_2 <- df %>% \n  filter(t %in% min_t:max_t) %>% \n  mutate(sd = sd/mean) %>% \n  group_by(t) %>% \n  reframe(sd = sqrt(sum(sd^2)),\n          mean = sum(mean),\n          sd = sd*mean) %>% \n  mutate(cohort = \"all\",\n         split = \"Totalled\")\n\ndf <- rbind(df, df_2) %>% \n  mutate(cohort = as.factor(cohort))\n\nggplot(df, aes(x = t, y = mean, ymin = mean-sd, ymax = mean+sd, colour = as.factor(cohort))) +\n  geom_line(linewidth = 0.75) +\n  geom_ribbon(linetype = \"dotted\", alpha = 0) +\n  facet_grid(cols = vars(split)) +\n  scale_x_continuous(breaks = seq(0, 1600, 120)) +\n  scale_colour_manual(values = cohort_pal) +\n  prettyplot() +\n  labs(y = \"Farm biomass\", x = \"Day of production\")\n```\n\n::: {.cell-output-display}\n![Example of how the overlapping cohorts combine into a single farm production curve (in this case biomass). The left plot shows the farm biomass produced by each cohort from initialisation to harvest, while the right plot shows the combined farm biomass over the course of a single production period of 548 days.\n](manuscript_files/figure-html/fig-cohorts-1.png){#fig-cohorts fig-align='center' width=816}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\ncoho_biom <- file.path(data_analysis_path, \"biomass_produced_comparison.qs\") %>% \n  qs::qread()\nharv_size <- file.path(output_farm_data_path, \"farm_harvest_size.qs\") %>% \n  qread()\n\ncoho_biom_summ <- coho_biom %>% \n  mutate(perc_diff = 100*(mean - tonnes_per_farm)/tonnes_per_farm)\n```\n:::\n\n\n\nEach farm's final population was calculated by dividing the production tonnage required by the average modelled individual harvest size for each farm (when feed reference feed). A population timeseries was the generated using the standard mortality rate (5.99798\\times 10^{-4} d$^{-1}$). Using this method, a farm's 'population' is not a good representation of the actual number of individuals being farmed, but it ensures each farm location is producing the correct tonnage while allowing comparisons between the different feeds. \n\n\n\n::: {#cell-fig-harvest-size .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\nharv_size %>% \n  mutate(weight = weight %>% set_units(\"g\") %>% set_units(\"kg\")) %>% \n  select(c(farm_ID, weight)) %>% \n  ggplot(aes(x = weight)) +\n  geom_histogram(binwidth = 0.25, colour = \"black\", fill = \"salmon\", alpha = 0.75) +\n  scale_y_continuous(limits = c(0,500)) +\n  labs(y = \"Frequency\", x = \"Harvest weight\") +\n  prettyplot() +\n  theme(aspect.ratio = 0.75)\n```\n\n::: {.cell-output-display}\n![Frequency distribution of harvest sizes used to create the population timeseries for each farm, as predicted by the fish-growth model. ](manuscript_files/figure-html/fig-harvest-size-1.png){#fig-harvest-size fig-align='center' width=816}\n:::\n::::\n:::\n\n\n\nBy this method, farm biomass as predicted by the model slightly overestimated farm tonnage. Predicted farm biomass was 2.4-6.5 higher than tonnage produced (@fig-biomass-produced). This variation was not correlated with mean farm temperature or total tonnage produced (@fig-biomass-variation). \n\n\n\n::: {#cell-fig-biomass-variation .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\nplot(coho_biom_summ$temp_c, coho_biom_summ$perc_diff)\nplot(coho_biom_summ$tonnes_per_farm, coho_biom_summ$perc_diff)\n```\n\n::: {.cell-output-display}\n![](manuscript_files/figure-html/fig-biomass-variation-1.png){#fig-biomass-variation-1 fig-align='center' width=816}\n:::\n\n::: {.cell-output-display}\n![](manuscript_files/figure-html/fig-biomass-variation-2.png){#fig-biomass-variation-2 fig-align='center' width=816}\n:::\n::::\n:::\n\n::: {#cell-fig-biomass-produced .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\ncoho_biom %>% \n  ggplot(aes(x = tonnes_per_farm, y = mean, colour = country)) +\n  geom_point(size = 2.5) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\") +\n  scale_x_continuous(limits = c(0,1700)) +\n  scale_y_continuous(limits = c(0,1700)) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(y = \"Modelled biomass produced (t)\", x = \"Observed biomass produced (t)\") +\n  prettyplot() +\n  theme(legend.position = \"top\", legend.title = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 20 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Modelled vs observed salmon biomass produced](manuscript_files/figure-html/fig-biomass-produced-1.png){#fig-biomass-produced fig-align='center' width=816}\n:::\n::::\n:::\n\n\n\n## Impacts of nutrient input\n\n*To detail here:*\n\n* How to convert feed and uneaten faeces into nutrients - just nitrogen? Carbon too? If just nitrogen, then can probably use the standard N = 6.25 x protein conversion to compare the feeds (lipids and carbohydrates have negligible protein). If doing carbon too, will need to find conversion rates for all of them, possibly splitting carbs/lipids into complex/simple, saturated/unsaturated, etc.\n* Source of species vulnerability layers\n\n# Results\n\n* Parameter sensitivity results are in supplementary @sec-parameter-sensitivity\n\nIn general, data outputs comes in the following dimensions:\n\n* Location -> temperature -> farm_ID\n* Uneaten feed + excreted faeces = total inputs (g)\n* Day of production (impacted by location)\n* Main point is the difference between feeds (kg/t salmon).\n* Also interesting to see if difference between feeds varies geographically (correlates with latitude, or maybe mean/median/max temperature?)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nfarmrun_files <- file.path(output_cohort_growth_data_path) %>% \n  list.files(full.names = T)\n\n# qs::qread(farmrun_files[1]) %>% names()\nweight <- purrr::map(farmrun_files, function(f) {qs::qread(f)[[\"weight_stat\"]]}) %>% bind_rows()\nbiomass <- purrr::map(farmrun_files, function(f) {qs::qread(f)[[\"biomass_stat\"]]}) %>% bind_rows()\n```\n:::\n\n\n\n## Uneaten feed\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Load and prep uneaten feed data\"}\nuneaten_total <- farmrun_files %>% \n  purrr::map(function(f) {qs::qread(f)[[\"total_uneat_stat\"]]}) %>% \n  bind_rows() %>% \n  merge(biomass, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  rename(uneat_mean = mean.x, biomass_mean = mean.y,\n         uneat_sd = sd.x, biomass_sd = sd.y) %>% \n  mutate(uneat_sd = uneat_sd/uneat_mean,\n         biomass_sd = biomass_sd/biomass_mean,\n         uneat_biom_mean = uneat_mean/biomass_mean,\n         uneat_biom_sd = sqrt(uneat_sd^2+biomass_sd^2)*uneat_biom_mean)\n\nuneaten_total_stats <- uneaten_total %>% \n  group_by(feed, farm_ID) %>% \n  reframe(total = sum(uneat_biom_mean)) %>% \n  group_by(feed) %>% \n  reframe(min = minna(total),\n          max = maxna(total),\n          mean = meanna(total)) %>% \n  mutate(min = min %>% set_units(\"g g_fish-1\") %>% set_units(\"g kg_fish-1\"),\n         max = max %>% set_units(\"g g_fish-1\") %>% set_units(\"g kg_fish-1\"),\n         mean = mean %>% set_units(\"g g_fish-1\") %>% set_units(\"g kg_fish-1\")) %>% \n  mutate(min = round(min,2),\n         max = round(max,2),\n         mean = round(mean,2))\n```\n:::\n\n\n\n### Amount\n\n* Total reference uneaten feed across a cohort (548 days) ranged from 48.46 to 48.46 g kg$^{-1}$, with a mean of 61.71.\n* There was very little difference between the past and future feeds and the reference feed. Uneaten past feed ranged from \n48.72 to 48.72 g kg$^{-1}$ (mean of 62.17) while uneaten future feed ranged from \n48.73 to 48.73 g kg$^{-1}$ (mean of 62.05).\n* @fig-total-uneaten-perday shows the range of total uneaten feed per day across countries.\n\n\n\n::: {#cell-fig-total-uneaten-perday .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nuneaten_total %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  mutate(uneat_biom_mean = uneat_biom_mean %>% set_units(\"g g_fish-1 d-1\") %>% set_units(\"g kg_fish-1 d-1\"),\n         country = factor(country, levels = sorted_countries)) %>% \n  ggplot(aes(x = country, y = uneat_biom_mean, fill = feed)) +\n  geom_boxplot() +\n  prettyplot() +\n  scale_fill_manual(values = feed_pal) +\n  labs(y = \"Uneaten feed\", x = \"Country\")\n```\n\n::: {.cell-output-display}\n![](manuscript_files/figure-html/fig-total-uneaten-perday-1.png){#fig-total-uneaten-perday fig-align='center' width=912}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nuneaten_P <- farmrun_files %>% purrr::map(function(f) {qs::qread(f)[[\"P_uneat_stat\"]]}) %>% bind_rows()\nuneaten_L <- farmrun_files %>% purrr::map(function(f) {qs::qread(f)[[\"L_uneat_stat\"]]}) %>% bind_rows()\nuneaten_C <- farmrun_files %>% purrr::map(function(f) {qs::qread(f)[[\"C_uneat_stat\"]]}) %>% bind_rows()\n\nuneaten_all <- uneaten_total %>% \n  select(-contains(\"biom\")) %>% \n  merge(uneaten_P, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  merge(uneaten_L, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  merge(uneaten_C, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  select(-c(contains(\"sd\")))\n```\n:::\n\n\n\n* The composition of the uneaten feed is (obviously) the same as the total feed composition (@sec-feeds).\n\n## Excreted faeces\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden  code-summary=\"Load and prep all excretion data\"}\n# The following reads in all the total excretion data and converts the mean and sd values into values/biomass\nexcreted_total <- farmrun_files %>% \n  purrr::map(function(f) {qs::qread(f)[[\"total_excr_stat\"]]}) %>% \n  bind_rows() %>% \n  merge(biomass, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  rename(excr_mean = mean.x, biomass_mean = mean.y,\n         excr_sd = sd.x, biomass_sd = sd.y) %>% \n  mutate(excr_sd = excr_sd/excr_mean,\n         biomass_sd = biomass_sd/biomass_mean,\n         excr_biom_mean = excr_mean/biomass_mean,\n         excr_biom_sd = sqrt(excr_sd^2+biomass_sd^2)*excr_biom_mean)\n\nexcreted_total_stats <- excreted_total %>% \n  group_by(feed, farm_ID) %>% \n  reframe(total = sum(excr_biom_mean)) %>% \n  group_by(feed) %>% \n  reframe(min = minna(total),\n          max = maxna(total),\n          mean = meanna(total)) %>% \n  mutate(min = min %>% set_units(\"g g_fish-1\") %>% set_units(\"g kg_fish-1\"),\n         max = max %>% set_units(\"g g_fish-1\") %>% set_units(\"g kg_fish-1\"),\n         mean = mean %>% set_units(\"g g_fish-1\") %>% set_units(\"g kg_fish-1\")) %>% \n  mutate(min = round(min,2),\n         max = round(max,2),\n         mean = round(mean,2))\n```\n:::\n\n\n\n* Total reference excreted faeces across a cohort (548 days) ranged from 194.24 to 295.9 g kg$^{-1}$, with a mean of 247.38.\n* There was very little difference between the past and future feeds and the reference feed. Uneaten past feed ranged from \n154.33 to 236.05 g kg$^{-1}$ (mean of 196.94 g kg$^{-1}$) while uneaten future feed ranged from \n202.55 to 308.61 g kg$^{-1}$ (mean of 257.91 g kg$^{-1}$).\n* @fig-total-excreted-perday shows the range of total excreted faeces per day across countries.\n\n\n\n::: {#cell-fig-total-excreted-perday .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nexcreted_total %>% \n  merge(farms_geometry, by = \"farm_ID\") %>% \n  mutate(excr_biom_mean = excr_biom_mean %>% set_units(\"g g_fish-1 d-1\") %>% set_units(\"g kg_fish-1 d-1\"),\n         country = factor(country, levels = sorted_countries)) %>% \n  ggplot(aes(x = country, y = excr_biom_mean, fill = feed)) +\n  geom_boxplot() +\n  prettyplot() +\n  scale_fill_manual(values = feed_pal) +\n  labs(y = \"Excreted faeces\", x = \"Country\")\n```\n\n::: {.cell-output-display}\n![](manuscript_files/figure-html/fig-total-excreted-perday-1.png){#fig-total-excreted-perday fig-align='center' width=864}\n:::\n:::\n\n\n\n### Amount\n\n\n\n::: {#cell-fig-total-excr-diff_perc .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\ndf <- excreted_total %>% \n  select(-contains(c(\"sd\", \"biom\"))) %>% \n  pivot_wider(names_from = \"feed\", values_from = \"excr_mean\") %>% \n  mutate(past = past-reference,\n         future = future-reference) %>% \n  pivot_longer(names_to = \"feed\", values_to = \"diff\", cols = c(past, future), names_transform = list(feed = as.factor)) %>% \n  mutate(reference = set_units(reference, \"g kg_fish-1 d-1\"),\n         diff_perc = drop_units(diff/reference)) %>% \n    merge(farm_coords, by = \"farm_ID\") %>% \n  mutate(prod_day = t - t_start + 1)\n\nsumm <- df %>%\n  group_by(hemisphere, feed) %>% \n  reframe(mean = 100*meanna(diff_perc) %>% round(3),\n          min = 100*meanna(diff_perc) %>% round(3),\n          max = 100*maxna(diff_perc) %>% round(3))\n\ndf %>% \n  ggplot(aes(x = reference, y = diff_perc, colour = hemisphere)) +\n  geom_point() + \n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  facet_grid(~feed) +\n  prettyplot()\n```\n\n::: {.cell-output-display}\n![Mean % difference in excreted faeces of the two experimental feeds (compared to the reference feed) with increasing overall excretion.](manuscript_files/figure-html/fig-total-excr-diff_perc-1.png){#fig-total-excr-diff_perc fig-align='center' width=816}\n:::\n::::\n:::\n\n\n\nThe difference in total excretion for the past feed ranged from \n-26, -26.1--23.9, -23.9% across all farms globally, and for the future feed ranged from \n1.3, 1.3-4.1, 3.7%. \n\n\n\n::: {#cell-fig-total-excr-diff_perc_2 .cell layout-align=\"center\"}\n:::: aside\n\n```{.r .cell-code .hidden}\ndf %>% \n  group_by(prod_day, feed, hemisphere) %>% \n  reframe(diff_perc_mean = meanna(diff_perc),\n          diff_perc_sd = sdna(diff_perc)) %>% \n  ggplot(aes(x = prod_day, y = diff_perc_mean, ymin = diff_perc_mean-diff_perc_sd, ymax = diff_perc_mean+diff_perc_sd, \n             colour = as.factor(hemisphere), fill = as.factor(hemisphere))) +\n  geom_line() + \n  geom_ribbon(alpha = 0.25) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  facet_grid(~feed) +\n  prettyplot()\n```\n\n::: {.cell-output-display}\n![Mean % difference in excreted faeces of the two experimental feeds (compared to the reference feed) over time in one production cycle.](manuscript_files/figure-html/fig-total-excr-diff_perc_2-1.png){#fig-total-excr-diff_perc_2 fig-align='center' width=816}\n:::\n::::\n:::\n\n\n\nHowever, the actual difference in excreted faeces varied by feed, time in the production cycle, and location of the farm [@fig-total-excr-act_diff].\n\n\n\n::: {#cell-fig-total-excr-act_diff .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\ndf <- excreted_total %>% \n  select(-contains(c(\"sd\", \"excr_mean\", \"biomass\"))) %>% \n  pivot_wider(names_from = \"feed\", values_from = \"excr_biom_mean\") %>% \n  mutate(past = past-reference,\n         future = future-reference) %>% \n  pivot_longer(names_to = \"feed\", values_to = \"diff\", cols = c(past, future), names_transform = list(feed = as.factor)) %>% \n  mutate(reference = set_units(reference, \"g kg_fish-1 d-1\"),\n         diff = set_units(diff, \"kg t_fish-1 d-1\")) %>% \n  merge(farm_coords, by = \"farm_ID\") %>% \n  mutate(prod_day = t-t_start+1)\n\nsumm <- df %>%\n  group_by(hemisphere, feed) %>% \n  reframe(mean = meanna(diff) %>% round(3),\n          min = meanna(diff) %>% round(3),\n          max = maxna(diff) %>% round(3))\n\ndf %>% \n  group_by(hemisphere, feed, prod_day) %>% \n  reframe(mean_diff = meanna(diff),\n          sd_diff = sdna(diff) %>% set_units(\"kg t_fish-1 d-1\")) %>% \n  ggplot(aes(x = prod_day, y = mean_diff, ymin = mean_diff-sd_diff, ymax = mean_diff+sd_diff, colour = hemisphere, fill = hemisphere)) +\n  geom_line(linewidth = 0.75) +\n  geom_ribbon(alpha = 0.25) +\n  facet_wrap(~feed) +\n  prettyplot()\n```\n\n::: {.cell-output-display}\n![Mean actual difference in excreted faeces of the two experimental feeds (compared to the reference feed) over time in one production cycle.](manuscript_files/figure-html/fig-total-excr-act_diff-1.png){#fig-total-excr-act_diff fig-align='center' width=600}\n:::\n:::\n\n\n\n### Composition\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nexcreted_P <- farmrun_files %>% purrr::map(function(f) {qs::qread(f)[[\"P_excr_stat\"]]}) %>% bind_rows()\nexcreted_L <- farmrun_files %>% purrr::map(function(f) {qs::qread(f)[[\"L_excr_stat\"]]}) %>% bind_rows()\nexcreted_C <- farmrun_files %>% purrr::map(function(f) {qs::qread(f)[[\"C_excr_stat\"]]}) %>% bind_rows()\n\nexcreted_all <- excreted_total %>% \n  select(-contains(\"biom\")) %>% \n  merge(excreted_P, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  merge(excreted_L, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  merge(excreted_C, by = c(\"farm_ID\", \"feed\", \"t\")) %>% \n  select(-c(contains(\"sd\"))) %>% \n  rename(protein = mean.x, lipids = mean.y, carbohydrates = mean) %>% \n  mutate(protein = protein/excr_mean %>% set_units(\"d-1\"),\n         lipids = lipids/excr_mean %>% set_units(\"d-1\"),\n         carbohydrates = carbohydrates/excr_mean %>% set_units(\"d-1\")) %>% \n  select(-excr_mean)\n\nec <- excreted_all %>% \n  group_by(feed) %>% \n  reframe(P = mean(protein),\n          C = mean(carbohydrates),\n          L = mean(lipids)) %>% \n  mutate(source = \"excreted\") %>% \n  rbind(data.frame(\n    feed = c(\"reference\", \"past\", \"future\"),\n    P = c(tP_1, tP_2, tP_3),\n    C = c(tC_1, tC_2, tC_3),\n    L = c(tL_1, tL_2, tL_3),\n    source = rep(\"feed\", 3)\n  )) %>% \n  pivot_longer(cols = c(P,L,C), names_to = \"macro\", values_to = \"value\", \n               names_transform = list(macro = as.factor), values_transform = list(value = as.numeric)) %>% \n  mutate(source = factor(source, levels = c(\"feed\", \"excreted\")),\n         macro = factor(macro, levels = c(\"P\", \"L\", \"C\"), labels = c(\"Protein\", \"Lipids\", \"Carbohydrates\")),\n         feed = factor(feed, levels = c(\"reference\", \"past\", \"future\")),\n         source = factor(source, levels = c(\"feed\", \"excreted\"), labels = c(\"Feed\", \"Faeces\")))\n```\n:::\n\n\n\nUnlike the uneaten feed, the composition of excreted faeces differs from that of the incoming feed.\n[Note that composition does not change through time or with increasing biomass (because digestibility does not change with fish size or temeprature)]{.aside}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: aside\n\n```{.r .cell-code .hidden}\nexcreted_all %>% \n  pivot_longer(names_to = \"macro\", values_to = \"perc\", cols = c(\"protein\", \"lipids\", \"carbohydrates\")) %>% \n  mutate(macro = factor(macro, levels = c(\"protein\", \"lipids\", \"carbohydrates\"))) %>% \n  group_by(farm_ID, feed, macro) %>% \n  reframe(sd = sd(perc) %>% set_units(\"d-1\"),\n          mean = mean(perc)) %>% \n  ggplot(aes(x = farm_ID, colour = feed, fill = feed, y = 100*mean, ymin = 100*(mean-sd), ymax = 100*(mean+sd))) +\n  geom_point(size = 2) +\n  geom_errorbar(width = 0.5) +\n  scale_color_manual(values = feed_pal) +\n  scale_fill_manual(values = feed_pal) +\n  facet_grid(rows = vars(macro)) +\n  theme_classic() +\n  labs(x = \"Macronutrient\", y = \"Mean composition of faeces\")\n```\n:::\n:::\n\n::: {#cell-fig-composition-comparison .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nggplot(ec, aes(x = source, y = 100*value, fill = feed)) +\n  geom_col(colour = \"black\", position = position_dodge(width = 0.9), alpha = 0.75) +\n  facet_grid(cols = vars(macro)) +\n  prettyplot() +\n  scale_fill_manual(values = feed_pal) +\n  scale_y_continuous(breaks = seq(0, 60, 10)) +\n  labs(y = \"Composition (%)\", x = \"Source\")\n```\n\n::: {.cell-output-display}\n![Comparison of the composition of the reference (blue), past (red) and future (green) feed and faeces of salmon fed each feed.](manuscript_files/figure-html/fig-composition-comparison-1.png){#fig-composition-comparison fig-align='center' width=816}\n:::\n:::\n\n\n\n## Total nutrients\n\n# Statistical analysis & code availability\n\nAll analysis was conducted in R version 4.4.2 \"Pile of Leaves\" [@R_base]. \nMajor packages used include `terra` [@terra], `targets` [@targets], `future` [@future], `furrr` [@furrr], `renv` [@renv], and the `tidyverse` [@tidyverse].\nFor a full list of R packages used see the lockfile on [Github](https://www.github.com).\nThis manuscript was written in Quarto [@quarto] using TinyTex [@tinytex] and the acronyms extension [@acronyms]. \n\n# Supplementary stuff\n\n## Parameter sensitivity {#sec-parameter-sensitivity}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nsens_weight <- output_sens_data_path %>% \n  list.files(full.names = T) %>% \n  str_subset(\"results\") %>% \n  str_subset(\"weight\") %>% \n  qs::qread()\n\nsens_excr <- output_sens_data_path %>% \n  list.files(full.names = T) %>% \n  str_subset(\"results\") %>% \n  str_subset(\"total_excr\") %>% \n  qs::qread() \n\nsens_data <- rbind(sens_weight, sens_excr) %>% \n  mutate(adj_param = factor(adj_param, levels = param_names$name))\n```\n:::\n\n\n\nLooking at @fig-param-sens-weight:\n\n* The most sensitive parameter by far is $m$ (the weight exponent for anabolism), followed closely by $n$ the (weight exponent for catabolism)\n* These two are also relatively uncertain, as $m$ was taken from *Salmo trutta* measurements in a fairly old paper [@broekhuizen_modelling_1994] and $n$ was taken from @baldan_r_2018 which did not specifically look at Atlantic salmon. There must be more up-to-date measurements for Atlantic salmon in particular. \n\n\n\n::: {#cell-fig-param-sens-weight .cell layout-align=\"center\"}\n\n```{.r .cell-code .hidden}\nsens_data %>% \n  ggplot(aes(x = adj_param, y = mean_sens, ymin = mean_sens - sd_sens, ymax = mean_sens + sd_sens, fill = measure)) +\n  geom_col(position = position_dodge(), width = 0.95, colour = \"black\", alpha = 0.75) +\n  # geom_errorbar(position = position_dodge(width = 0.95), width = 0.3) +\n  geom_hline(aes(yintercept = 0), linetype = \"dashed\") +\n  scale_y_continuous(breaks = seq(-30,30,5), limits = c(-10,30)) +\n  scale_x_discrete(limits = rev(param_names$name), labels = rev(param_names$lab)) +\n  scale_fill_manual(values = c(weight = \"salmon\", total_excr = \"steelblue\")) +\n  # scale_fill_manual(values = c(\"weight\" = \"salmon\", \"uneat\" = \"steelblue\", \"excr\" = \"darkgreen\")) +\n  labs(x = \"Adjusted parameter\", y = \"Sensitivity\") +\n  prettyplot() +\n  theme(strip.text = element_blank(), \n        aspect.ratio = 0.8,\n        axis.title.y = element_blank()) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![Impact of increasing each model parameter by 10% on final farm biomass (red) and total excreted nutrients (blue) over the whole production period.](manuscript_files/figure-html/fig-param-sens-weight-1.png){#fig-param-sens-weight fig-align='center' width=816}\n:::\n:::\n\n\n\n# References\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}