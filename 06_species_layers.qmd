---
title: "05_species_layers"
format: html
editor: source
---

```{r}
library(tidyverse)
library(here)
library(janitor)
library(terra)
library(sf)
library(qs)
library(countrycode)
library(terra)
library(stars)
library(furrr)
library(rnaturalearth)

source("src/dir.R")
source("src/spatial_templates.R")
```

Pull in the species vulnerability data

```{r}
full_vuln_df <- qread(file = here("data/_general_data/species_layers/vulnerabilities/marine_spp_vulnerabilities_eutrophication.qs")) 

```

Determine which cells will be relevant for species layers to reduce the size necessary for aquamaps data.

```{r}

this_species <- "atlantic_salmon"

reference_point_df<- qread(here("data/atlantic_salmon/data_products/model_summaries/reference/nitrogen_summary.qs"))

reference_feed_total_N <- reference_point_df |> dplyr::select(geometry, total_N_mean) 

#salmon_locations_transform <- st_transform(salmon_locations, crs = "ESRI:54016")

salmon_farm_rast <- rasterize(x = reference_feed_total_N, y = base_rast, field = "total_N_mean", fun = sum)

salmon_farm_nutrient_df <- terra::as.data.frame(x= salmon_farm_rast, xy = TRUE) |> 
  rename(nitrogen = sum) 

#cell_ids_for_farms <- salmon_farm_df$cell_id |> unique()


```

#Now reproject all species rasters into the equal area (Gall) projection and then aggregate them again.

```{r}
aquamaps_0.5 <- qread(here("data/_general_data/species_layers/distribution/aquamaps_0.5d.qs"))

aquamaps_spp <- unique(aquamaps_0.5$species)

# aquamaps_vuln_df <- 
#   aquamaps_0.5 |> left_join(full_vuln_df)

rm(aquamaps_0.5)

#check for no data
aquamaps_vuln_df |> filter(is.na(eutrophication_nutrient_pollution)) |> pull(species) |> unique() |> length()


species_match <- inner_join(aquamaps_0.5, full_vuln_df, by = c("species"))


# aquamap_spp_list <- 
#   aquamaps_0.5 |> 
#   select(CenterLong, CenterLat, Probability, species) |> 
#   group_by(species) |> 
#   group_split()
# 
# # remove the big file
# rm(aquamaps_0.5)

# #test function
# this_species_df <- aquamap_spp_list[[19173]]




salmon_vect <- vect(reference_feed_total_N)


#Crop for east canada
east_canada_rast <- rasterize(x = salmon_vect, y = rast(res = 0.5), field = "total_N_mean", fun = sum) |> crop(ext(east_canada_bbox))|> subst(NA, -999)
east_canada_df <- terra::as.data.frame(east_canada_rast, xy =TRUE) |> 
  left_join(species_match, by = c("x" = "CenterLong", "y" = "CenterLat")) |> 
  rename(nitrogen = sum) |> 
  mutate(nitrogen = case_when(nitrogen ==-999 ~ NA,
                              TRUE ~ nitrogen)) |>  
  mutate(region = "East Canada")




#Crop for west canada
west_canada_rast <- rasterize(x = salmon_vect, y = rast(res = 0.5), field = "total_N_mean", fun = sum) |> crop(ext(west_canada_bbox)) |> subst(NA, -999)
west_canada_df <- terra::as.data.frame(west_canada_rast, xy =TRUE) |> 
  left_join(species_match, by = c("x" = "CenterLong", "y" = "CenterLat")) |> 
  rename(nitrogen = sum) |> 
  mutate(nitrogen = case_when(nitrogen ==-999 ~ NA,
                              TRUE ~ nitrogen)) |> 
  mutate(region = "West Canada")



#Crop for Chile
chile_rast <- rasterize(x = salmon_vect, y = rast(res = 0.5), field = "total_N_mean", fun = sum) |> crop(ext(chile_bbox))|> subst(NA, -999)
chile_df <- terra::as.data.frame(chile_rast, xy =TRUE) |> 
  left_join(species_match, by = c("x" = "CenterLong", "y" = "CenterLat")) |> 
  rename(nitrogen = sum) |> 
  mutate(nitrogen = case_when(nitrogen ==-999 ~ NA,
                              TRUE ~ nitrogen)) |>
  mutate(region = "Chile")
  




#Crop for europe - iceland
europe_iceland_rast <- rasterize(x = salmon_vect, y = rast(res = 0.5),field = "total_N_mean", fun = sum) |> crop(ext(europe_iceland_bbox)) |> subst(NA,-999)
europe_iceland_df <- terra::as.data.frame(europe_iceland_rast, xy =TRUE) |> 
  left_join(species_match, by = c("x" = "CenterLong", "y" = "CenterLat")) |> 
  rename(nitrogen = sum) |> 
 mutate(nitrogen = case_when(nitrogen ==-999 ~ NA,
                              TRUE ~ nitrogen)) |> 
  mutate(region = "Europe & Iceland")



#Crop for australia
australia_rast <- rasterize(x = salmon_vect, y = rast(res = 0.5), field = "total_N_mean", fun = sum) |> crop(ext(australia_bbox))|> subst(NA, -999)
australia_df <- terra::as.data.frame(australia_rast, xy =TRUE) |> 
  left_join(species_match, by = c("x" = "CenterLong", "y" = "CenterLat")) |> 
  rename(nitrogen = sum) |> 
  mutate(nitrogen = case_when(nitrogen ==-999 ~ NA,
                              TRUE ~ nitrogen)) |> 
  mutate(region = "Australia")



all_regions_df <- 
  bind_rows(east_canada_df, 
          west_canada_df, 
          chile_df,
          europe_iceland_df,
          australia_df) |> 
  mutate(norm_nitrogen = (nitrogen-min(nitrogen, na.rm = TRUE))/(max(nitrogen, na.rm = TRUE)-min(nitrogen, na.rm = TRUE))) |> 
  mutate(impact = norm_nitrogen*eutrophication_nutrient_pollution)

qsave(x=all_regions_df, file = "data/atlantic_salmon/data_products/spatial_summaries/all_regions.qs")

europe_iceland_df |> filter(!is.na(nitrogen))
```

reproject_aquamaps_lyrs \<- (this_species_df){

this_sp \<- unique(this_species_df\$species)

save_name \<- sprintf("data/*general_data/species_layers/reprojected_distributions/species_dist_gall*%s.qs", this_sp)

if(!file.exists(save_name) & nrow(this_species_df)\>2){

```         
message("Processing reprojection for ", this_sp)

#create points from coords and transform to gall projection
this_sp_points <- st_as_sf(this_species_df, coords = c("CenterLong", "CenterLat"), crs = "EPSG:4326") |> st_transform(crs = "ESRI:54016")

#specify resolution
target_res <- 10000

#extent of points
this_sp_ext <- st_bbox(this_sp_points)

#create blank grid in gall ext and resolution
this_blank_grid <- st_as_stars(this_sp_ext, dx = target_res, dy = target_res, values = 1 , crs = "ESRI:54016")

#rasterize over blank grid
this_spp_rast <- st_rasterize(this_sp_points, template = this_blank_grid)

#convert
this_sp_gall_df <- as.data.frame(this_spp_rast, xy = TRUE) |> 
  mutate(species = this_sp)

qsave(x = this_sp_gall_df, file = save_name)
```

}}

#multicore run for species

future::plan(strategy = "multisession", workers = parallel::detectCores()-2)

map(.x = aquamap_spp_list, .f = reproject_aquamaps_lyrs)

aquamap_spp_list\[\[19173\]\]

\`\`\`
